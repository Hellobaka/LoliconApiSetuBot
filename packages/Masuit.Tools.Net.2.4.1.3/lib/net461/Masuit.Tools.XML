<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Masuit.Tools</name>
    </assembly>
    <members>
        <member name="T:Masuit.Tools.Database.DataTableHelper">
            <summary>
            DataTable帮助类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.AddIdentityColumn(System.Data.DataTable)">
            <summary>
            给DataTable增加一个自增列
            如果DataTable 存在 identityid 字段  则 直接返回DataTable 不做任何处理
            </summary>
            <param name="dt">DataTable</param>
            <returns>返回Datatable 增加字段 identityid </returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.HasRows(System.Data.DataTable)">
            <summary>
            检查DataTable 是否有数据行
            </summary>
            <param name="dt">DataTable</param>
            <returns>是否有数据行</returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.ToList``1(System.Data.DataTable)">
            <summary>
            datatable转List
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.ToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="tableName">表名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.ToDataTable``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="tableName">表名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.CreateTable(System.Collections.Generic.List{System.String})">
            <summary>
            根据nameList里面的字段创建一个表格,返回该表格的DataTable
            </summary>
            <param name="nameList">包含字段信息的列表</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.CreateTable(System.Data.DataTable,System.String)">
            <summary>
            通过字符列表创建表字段，字段格式可以是：<br/>
            1) a,b,c,d,e<br/>
            2) a|int,b|string,c|bool,d|decimal<br/>
            </summary>
            <param name="dt"></param>
            <param name="nameString">字符列表</param>
            <returns>内存表</returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.ConvertType(System.String)">
            <summary>
            根据类型名返回一个Type类型
            </summary>
            <param name="typeName">类型的名称</param>
            <returns>Type对象</returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.GetDataRowArray(System.Data.DataRowCollection)">
            <summary>
            获得从DataRowCollection转换成的DataRow数组
            </summary>
            <param name="drc">DataRowCollection</param>
            <returns>DataRow数组</returns>
        </member>
        <member name="M:Masuit.Tools.Database.DataTableHelper.GetTableFromRows(System.Data.DataRow[])">
            <summary>
            将DataRow数组转换成DataTable，注意行数组的每个元素须具有相同的数据结构，
            否则当有元素长度大于第一个元素时，抛出异常
            </summary>
            <param name="rows">行数组</param>
            <returns>将内存行组装成内存表</returns>
        </member>
        <member name="T:Masuit.Tools.DateTimeExt.ChineseCalendar">
            <summary>
            中国农历类 支持 1900.1.31日起至 2069.12.31日止的数据
            </summary>
            <remarks>
            本程序使用数据来源于网上的万年历查询，并综合了一些其它数据
            </remarks>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.ChineseCalendar.LunarDateArray">
             <summary>
             来源于网上的农历数据
             </summary>
             <remarks>
             数据结构如下，共使用17位数据<br/>
             说明如下：<br/>
            1-4：判断当年是否为闰年，若为闰年，则为闰年的月份，反之为0；<br/>
            5-16：为除了闰月外的正常月份是大月还是小月，1为30天，0为29天。（注意：1月对应第16位，2月对应第15位……12月对应第5位)<br/>
            17-20： 表示闰月是大月还是小月，若为1，则为大月，若为0，则为小月。（注意：仅当存在闰月的情况下有意义）<br/>
             -<br/>
            举例说明：<br/>
            例一：0x04bd8<br/>
            对应二进制：0000    0100     1011    1101    1000<br/>
            则表示当年有闰月8月，且闰月为小月29天<br/>
            该年1-12月的天数为：29    30   29   29   30   29   30    29（闰月）  30     30   29    30<br/>
            例二：0x04ae0<br/>
            对应二进制：0000    0100     1010    1110    0000<br/>
            则表示当年没有闰月<br/>
            该年1-12月的天数为：29    30    29     29    30    29    30    29    30   30    30    29<br/>
            补充闰月介绍：<br/>
            闰月是阴阳历中为使历年平均长度接近会归年而增设的月。阴阳历以朔望月的长度（29.5306日）为一个月的平均值，全年12个月，同回归年（365.2422日）相差约10日21时，故需要置闰，三年闰一个月，五年闰二个月，十九年闰七个月。阴阳历以朔望月的长度（29.5306日）为一个月的平均值，全年12个月，同回归年（365.2422日）相差约10日21时，故需要置闰，三年闰一个月，五年闰二个月，十九年闰七个月。
            </remarks>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.ChineseCalendar.ConstellationName">
            <summary>
            星座
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseConstellationName">
            <summary>
            二十八星宿
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.ChineseCalendar.SolarTerm">
            <summary>
            节气数据
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.CustomWorkDays">
            <summary>
            自定义的工作日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.CustomHolidays">
            <summary>
            自定义的节假日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.SolarHolidayInfo">
            <summary>
            按公历计算的通用节假日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.LunarHolidayInfo">
            <summary>
            按农历计算的通用节假日
            </summary>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.#ctor(System.DateTime@)">
            <summary>
            用一个标准的公历日期来初使化
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            用农历的日期来初使化
            </summary>
            <param name="cy">农历年</param>
            <param name="cm">农历月</param>
            <param name="cd">农历日</param>
            <param name="leapMonthFlag">闰月标志</param>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.GetChineseMonthDays(System.Int32,System.Int32)">
            <summary>
            传回农历 y年m月的总天数
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.GetChineseLeapMonth(System.Int32)">
            <summary>
            传回农历 y年闰哪个月 1-12 , 没闰传回 0
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.GetChineseLeapMonthDays(System.Int32)">
            <summary>
            传回农历 y年闰月的天数
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.GetChineseYearDays(System.Int32)">
            <summary>
            取农历年一年的天数
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.GetChineseHour(System.DateTime)">
            <summary>
            获得当前时间的时辰
            </summary>
            <param name="dt"></param>
            <returns></returns>
            
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.CheckChineseDateLimit(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检查农历日期是否合理
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="leapMonth"></param>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.ConvertNumToChineseNum(System.Char)">
            <summary>
            将0-9转成汉字形式
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.BitTest32(System.Int32,System.Int32)">
            <summary>
            测试某位是否为真
            </summary>
            <param name="num"></param>
            <param name="bitpostion"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.ConvertDayOfWeek(System.DayOfWeek)">
            <summary>
            将星期几转成数字表示
            </summary>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.CompareWeekDayHoliday(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            比较当天是不是指定的第周几
            </summary>
            <param name="date"></param>
            <param name="month"></param>
            <param name="week"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseCalendarHoliday">
            <summary>
            计算中国农历节日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.WeekDayHoliday">
            <summary>
            按某月第几周第几日计算的节日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.DateHoliday">
            <summary>
            按公历日计算的节日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.IsHoliday">
            <summary>
            今天是否是假期
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.IsWorkDay">
            <summary>
            今天是否是工作日
            </summary>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.IsWeekend">
            <summary>
            是否是周末
            </summary>
            <returns></returns>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.Date">
            <summary>
            取对应的公历日期
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.WeekDay">
            <summary>
            取星期几
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.WeekDayStr">
            <summary>
            周几的字符
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.DateString">
            <summary>
            公历日期中文表示法 如一九九七年七月一日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.IsLeapYear">
            <summary>
            当前是否公历闰年
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseConstellation">
            <summary>
            28星宿计算
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseHour">
            <summary>
            时辰
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.Today">
            <summary>
            农历今天
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.IsChineseLeapMonth">
            <summary>
            是否闰月
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.IsChineseLeapYear">
            <summary>
            当年是否有闰月
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseDay">
            <summary>
            农历日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseDayString">
            <summary>
            农历日中文表示
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseMonth">
            <summary>
            农历的月份
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseMonthString">
            <summary>
            农历月份字符串
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseYear">
            <summary>
            取农历年份
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseYearString">
            <summary>
            取农历年字符串如，一九九七年
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseDateString">
            <summary>
            取农历日期表示法：农历一九九七年正月初五
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseTwentyFourDay">
            <summary>
            定气法计算二十四节气,二十四节气是按地球公转来计算的，并非是阴历计算的
            </summary>
            <remarks>
            节气的定法有两种。古代历法采用的称为"恒气"，即按时间把一年等分为24份，
            每一节气平均得15天有余，所以又称"平气"。现代农历采用的称为"定气"，即
            按地球在轨道上的位置为标准，一周360°，两节气之间相隔15°。由于冬至时地
            球位于近日点附近，运动速度较快，因而太阳在黄道上移动15°的时间不到15天。
            夏至前后的情况正好相反，太阳在黄道上移动较慢，一个节气达16天之多。采用
            定气时可以保证春、秋两分必然在昼夜平分的那两天。
            </remarks>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseTwentyFourPrevDay">
            <summary>
            当前日期前一个最近节气
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.ChineseTwentyFourNextDay">
            <summary>
            当前日期后一个最近节气
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.Constellation">
            <summary>
            计算指定日期的星座序号 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.Animal">
            <summary>
            计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的
            鼠年为1,其它类推
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.AnimalString">
            <summary>
            取属相字符串
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.GanZhiYearString">
            <summary>
            取农历年的干支表示法如 乙丑年
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.GanZhiMonthString">
            <summary>
            取干支的月表示字符串，注意农历的闰月不记干支
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.GanZhiDayString">
            <summary>
            取干支日表示法
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.GanZhiDateString">
            <summary>
            取当前日期的干支表示法如 甲子年乙丑月丙庚日
            </summary>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.NextDay">
            <summary>
            取下一天
            </summary>
            <returns></returns>
        </member>
        <member name="P:Masuit.Tools.DateTimeExt.ChineseCalendar.PervDay">
            <summary>
            取前一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.AddDays(System.Int32)">
            <summary>
            取下n天
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.AddWorkDays(System.Int32)">
            <summary>
            取下n天
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.ChineseCalendar.AddMonths(System.Int32)">
            <summary>
            加n月
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.DateTimeExt.DateInfoStruct">
            <summary>
            日期信息
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.DateInfoStruct.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.DateInfoStruct.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.DateInfoStruct.Recess">
            <summary>
            假期长度
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.DateInfoStruct.HolidayName">
            <summary>
            节假日名
            </summary>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateInfoStruct.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            日期信息
            </summary>
            <param name="month"></param>
            <param name="day"></param>
            <param name="recess"></param>
            <param name="name"></param>
        </member>
        <member name="T:Masuit.Tools.DateTimeExt.DateUtil">
            <summary>
            日期操作工具类
            </summary>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetWeekAmount(System.DateTime,System.Int32)">
            <summary>
            获取某一年有多少周
            </summary>
            <param name="_"></param>
            <param name="year">年份</param>
            <returns>该年周数</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.WeekOfYear(System.DateTime@)">
            <summary>
            返回年度第几个星期   默认星期日是第一天
            </summary>
            <param name="date">时间</param>
            <returns>第几周</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.WeekOfYear(System.DateTime@,System.DayOfWeek)">
            <summary>
            返回年度第几个星期
            </summary>
            <param name="date">时间</param>
            <param name="week">一周的开始日期</param>
            <returns>第几周</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetWeekTime(System.DateTime,System.Int32,System.Int32,System.DateTime@,System.DateTime@)">
            <summary>
            得到一年中的某周的起始日和截止日
            年 nYear
            周数 nNumWeek
            周始 out dtWeekStart
            周终 out dtWeekeEnd
            </summary>
            <param name="_"></param>
            <param name="nYear">年份</param>
            <param name="nNumWeek">第几周</param>
            <param name="dtWeekStart">开始日期</param>
            <param name="dtWeekeEnd">结束日期</param>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetWeekWorkTime(System.DateTime,System.Int32,System.Int32,System.DateTime@,System.DateTime@)">
            <summary>
            得到一年中的某周的起始日和截止日    周一到周五  工作日
            </summary>
            <param name="_"></param>
            <param name="nYear">年份</param>
            <param name="nNumWeek">第几周</param>
            <param name="dtWeekStart">开始日期</param>
            <param name="dtWeekeEnd">结束日期</param>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.SetLocalTime(System.DateTime@)">
            <summary>
            设置本地计算机时间
            </summary>
            <param name="dt">DateTime对象</param>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetDateTime(System.DateTime@,System.Int32)">
            <summary>
            返回相对于当前时间的相对天数
            </summary>
            <param name="dt"></param>
            <param name="relativeday">相对天数</param>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetDateTimeF(System.DateTime@)">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetTotalSeconds(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01 00:00:00的秒数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetTotalMilliseconds(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01 00:00:00的毫秒数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetTotalMicroseconds(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01 00:00:00的微秒时间戳
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetTotalNanoseconds(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01 00:00:00的纳秒时间戳
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetTotalMinutes(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01 00:00:00的分钟数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetTotalHours(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01 00:00:00的小时数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetTotalDays(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01 00:00:00的天数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetDaysOfYear(System.DateTime,System.Int32)">
            <summary>
            返回本年有多少天
            </summary>
            <param name="_"></param>
            <param name="iYear">年份</param>
            <returns>本年的天数</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetDaysOfYear(System.DateTime@)">
            <summary>本年有多少天</summary>
            <param name="dt">日期</param>
            <returns>本天在当年的天数</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetDaysOfMonth(System.DateTime,System.Int32,System.Int32)">
            <summary>本月有多少天</summary>
            <param name="_"></param>
            <param name="iYear">年</param>
            <param name="month">月</param>
            <returns>天数</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetDaysOfMonth(System.DateTime@)">
            <summary>本月有多少天</summary>
            <param name="dt">日期</param>
            <returns>天数</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetWeekNameOfDay(System.DateTime@)">
            <summary>返回当前日期的星期名称</summary>
            <param name="idt">日期</param>
            <returns>星期名称</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetWeekNumberOfDay(System.DateTime@)">
            <summary>返回当前日期的星期编号</summary>
            <param name="idt">日期</param>
            <returns>星期数字编号</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.IsRuYear(System.Int32)">
            <summary>判断当前年份是否是闰年，私有函数</summary>
            <param name="iYear">年份</param>
            <returns>是闰年：True ，不是闰年：False</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.IsDateTime(System.String)">
            <summary>
            判断是否为合法日期，必须大于1800年1月1日
            </summary>
            <param name="strDate">输入日期字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.In(System.DateTime@,System.DateTime,System.DateTime,Masuit.Tools.DateTimeExt.RangeMode)">
            <summary>
            判断时间是否在区间内
            </summary>
            <param name="this"></param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <param name="mode">模式</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.ReturnDateFormat(System.DateTime,System.Int32,System.String@,System.String@)">
            <summary>
             返回每月的第一天和最后一天
            </summary>
            <param name="_"></param>
            <param name="month">月份</param>
            <param name="firstDay">第一天</param>
            <param name="lastDay">最后一天</param>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetMonthLastDate(System.DateTime,System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="_"></param>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetTimeDelay(System.DateTime@,System.DateTime)">
            <summary>
            获得一段时间内有多少小时
            </summary>
            <param name="dtStar">起始时间</param>
            <param name="dtEnd">终止时间</param>
            <returns>小时差</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetDateString(System.DateTime@)">
            <summary>
            获得8位时间整型数字
            </summary>
            <param name="dt">当前的日期时间对象</param>
            <returns>8位时间整型数字</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.DateDiff(System.DateTime@,System.DateTime@)">
            <summary>
            返回时间差
            </summary>
            <param name="dateTime1">时间1</param>
            <param name="dateTime2">时间2</param>
            <returns>时间差</returns>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.DateUtil.GetDiffTime(System.DateTime@,System.DateTime@)">
            <summary>
            计算2个时间差
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>时间差</returns>
        </member>
        <member name="T:Masuit.Tools.DateTimeExt.RangeMode">
            <summary>
            区间模式
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.RangeMode.Open">
            <summary>
            开区间
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.RangeMode.Close">
            <summary>
            闭区间
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.RangeMode.OpenClose">
            <summary>
            左开右闭区间
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.RangeMode.CloseOpen">
            <summary>
            左闭右开区间
            </summary>
        </member>
        <member name="T:Masuit.Tools.DateTimeExt.WeekHolidayStruct">
            <summary>
            节假日信息
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.WeekHolidayStruct.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.WeekHolidayStruct.WeekAtMonth">
            <summary>
            这个月第几周
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.WeekHolidayStruct.WeekDay">
            <summary>
            周末日
            </summary>
        </member>
        <member name="F:Masuit.Tools.DateTimeExt.WeekHolidayStruct.HolidayName">
            <summary>
            假日名
            </summary>
        </member>
        <member name="M:Masuit.Tools.DateTimeExt.WeekHolidayStruct.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            节假日信息
            </summary>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="weekDay"></param>
            <param name="name"></param>
        </member>
        <member name="M:Masuit.Tools.BigIntegerExtensions.ToBinary(System.Numerics.BigInteger,System.Int32)">
            <summary>
            十进制转任意进制
            </summary>
            <param name="num"></param>
            <param name="bin">进制</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.DoubleExtensions.Digits8(System.Double)">
            <summary>
            将小数截断为8位
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IConvertibleExtensions.ConvertTo``1(System.IConvertible)">
            <summary>
            类型直转
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IConvertibleExtensions.TryConvertTo``1(System.IConvertible,``0)">
            <summary>
            类型直转
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="defaultValue">转换失败的默认值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IConvertibleExtensions.TryConvertTo``1(System.IConvertible,``0@)">
            <summary>
            类型直转
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="result">转换失败的默认值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IConvertibleExtensions.TryConvertTo(System.IConvertible,System.Type,System.Object@)">
            <summary>
            类型直转
            </summary>
            <param name="value"></param>
            <param name="type">目标类型</param>
            <param name="result">转换失败的默认值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IConvertibleExtensions.ConvertTo(System.IConvertible,System.Type)">
            <summary>
            类型直转
            </summary>
            <param name="value"></param>
            <param name="type">目标类型</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            添加或更新键值对
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            添加或更新键值对
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="that">另一个字典集</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AddOrUpdateTo``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            添加或更新键值对
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="that">另一个字典集</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Func{``0,``1,``1})">
            <summary>
            添加或更新键值对
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="key">键</param>
            <param name="addValue">添加时的值</param>
            <param name="updateValueFactory">更新时的操作</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,``1)">
            <summary>
            添加或更新键值对
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="key">键</param>
            <param name="addValue">添加时的值</param>
            <param name="updateValue">更新时的值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,``1,``1})">
            <summary>
            添加或更新键值对
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="that">另一个字典集</param>
            <param name="updateValueFactory">更新时的操作</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AddOrUpdateTo``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,``1,``1})">
            <summary>
            添加或更新键值对
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="that">另一个字典集</param>
            <param name="updateValueFactory">更新时的操作</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
            <summary>
            添加或更新键值对
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="key">键</param>
            <param name="addValueFactory">添加时的操作</param>
            <param name="updateValueFactory">更新时的操作</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``1})">
            <summary>
            获取或添加
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="key"></param>
            <param name="addValueFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            获取或添加
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="this"></param>
            <param name="key"></param>
            <param name="addValue"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.ForEach``2(System.Collections.Generic.IDictionary{``0,``1},System.Action{``0,``1})">
            <summary>
            遍历IEnumerable
            </summary>
            <param name="dic"></param>
            <param name="action">回调方法</param>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.ToDictionarySafety``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            安全的转换成字典集
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector">键选择器</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.ToDictionarySafety``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            安全的转换成字典集
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TElement"></typeparam>
            <param name="source"></param>
            <param name="keySelector">键选择器</param>
            <param name="elementSelector">值选择器</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.ToConcurrentDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            安全的转换成字典集
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TElement"></typeparam>
            <param name="source"></param>
            <param name="keySelector">键选择器</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.ToConcurrentDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            安全的转换成字典集
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TElement"></typeparam>
            <param name="source"></param>
            <param name="keySelector">键选择器</param>
            <param name="elementSelector">值选择器</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AsConcurrentDictionary``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            转换成并发字典集合
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IDictionaryExtensions.AsDictionary``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1})">
            <summary>
            转换成普通字典集合
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            遍历IEnumerable
            </summary>
            <param name="objs"></param>
            <param name="action">回调方法</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            遍历IEnumerable
            </summary>
            <param name="objs"></param>
            <param name="action">回调方法</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            按字段去重
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},``0[])">
            <summary>
            添加多个元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="values"></param>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.AddRangeIf``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean},``0[])">
            <summary>
            添加符合条件的多个元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="predicate"></param>
            <param name="values"></param>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.AddRangeIfNotContains``1(System.Collections.Generic.ICollection{``0},``0[])">
            <summary>
            添加不重复的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="values"></param>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})">
            <summary>
            移除符合条件的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="where"></param>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.InsertAfter``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean},``0)">
            <summary>
            在元素之后添加元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="condition">条件</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.InsertAfter``1(System.Collections.Generic.IList{``0},System.Int32,``0)">
            <summary>
            在元素之后添加元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="index">索引位置</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.IEnumerableExtensions.ToHashSet``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            转HashSet
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IntExtensions.GetBytes(System.Int32)">
            <summary>
            转换成字节数组
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IntExtensions.ToBinary(System.Int32,System.Int32)">
            <summary>
            十进制转任意进制
            </summary>
            <param name="num"></param>
            <param name="bin">进制</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.IPAddressExtensions.IsPrivateIP(System.Net.IPAddress)">
            <summary>
            判断IP是否是私有地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.LongExtensions.ToBinary(System.Int64,System.Int32)">
            <summary>
            十进制转任意进制
            </summary>
            <param name="num"></param>
            <param name="bin">进制</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.LongExtensions.GetBytes(System.Int64)">
            <summary>
            转换成字节数组
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.Clone``1(System.Object)">
            <summary>
            浅克隆
            </summary>
            <param name="source">源</param>
            <typeparam name="TDestination">目标类型</typeparam>
            <returns>目标类型</returns>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.DeepClone``1(System.Object)">
            <summary>
            深克隆
            </summary>
            <param name="source">源</param>
            <typeparam name="TDestination">目标类型</typeparam>
            <returns>目标类型</returns>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.CloneAsync``1(System.Object)">
            <summary>
            浅克隆(异步)
            </summary>
            <param name="source">源</param>
            <typeparam name="TDestination">目标类型</typeparam>
            <returns>目标类型</returns>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.DeepCloneAsync``1(System.Object)">
            <summary>
            深克隆(异步)
            </summary>
            <param name="source">源</param>
            <typeparam name="TDestination">目标类型</typeparam>
            <returns>目标类型</returns>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.CheckNullWithException``1(``0,System.String)">
            <summary>
            检查参数是否为null，为null时抛出异常
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">      要检查的对象</param>
            <param name="paramName">抛出异常时,显示的参数名</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj" /> 为null时抛出</exception>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.CheckNullWithException``1(``0,System.String,System.String)">
            <summary>
            检查参数是否为null，为null时抛出异常
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">      要检查的对象</param>
            <param name="paramName">抛出异常时,显示的参数名</param>
            <param name="message">  抛出异常时,显示的错误信息</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj" /> 为null时抛出</exception>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.CheckNullOrEmptyWithException(System.Collections.IEnumerable,System.String)">
            <summary>
            检查参数是否为null或emtpy，为null或emtpy时抛出异常
            </summary>
            <param name="obj">      要检查的对象</param>
            <param name="paramName">抛出异常时,显示的参数名</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj" /> 为null或emtpy时抛出</exception>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.CheckNullOrEmptyWithException(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            检查参数是否为null或emtpy，为null或emtpy时抛出异常
            </summary>
            <param name="obj">      要检查的对象</param>
            <param name="paramName">抛出异常时,显示的参数名</param>
            <param name="message">  抛出异常时,显示的错误信息</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj" /> 为null或emtpy时抛出</exception>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.IsNullOrEmpty``1(``0)">
            <summary>
            判断是否为null，null或0长度都返回true
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.ToJsonString(System.Object,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            转换成json字符串
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.ObjectExtensions.ReferenceEquals(System.Object,System.Object)">
            <summary>
            严格比较两个对象是否是同一对象(判断引用)
            </summary>
            <param name="this">自己</param>
            <param name="o">需要比较的对象</param>
            <returns>是否同一对象</returns>
        </member>
        <member name="M:Masuit.Tools.RandomExtensions.StrictNext(System.Random,System.Int32)">
            <summary>
            生成真正的随机数
            </summary>
            <param name="r"></param>
            <param name="seed"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.RandomExtensions.NextGauss(System.Random,System.Double,System.Double)">
            <summary>
            产生正态分布的随机数
            </summary>
            <param name="rand"></param>
            <param name="mean">均值</param>
            <param name="stdDev">方差</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.ShortExtensions.GetBytes(System.Int16)">
            <summary>
            转换成字节数组
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StreamExtensions.SaveAsMemoryStream(System.IO.Stream)">
            <summary>
            将流转换为内存流
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StreamExtensions.ToArray(System.IO.Stream)">
             <summary>
            
             </summary>
             <param name="stream"></param>
             <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.ToDateTime(System.String)">
            <summary>
            字符串转时间
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.ToGuid(System.String)">
            <summary>
            字符串转Guid
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.Replace(System.String,System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            根据正则替换
            </summary>
            <param name="input"></param>
            <param name="regex">正则表达式</param>
            <param name="replacement">新内容</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.CreateShortToken(System.String,System.Byte)">
            <summary>
            生成唯一短字符串
            </summary>
            <param name="str"></param>
            <param name="chars">可用字符数数量，0-9,a-z,A-Z</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.FromBinary(System.String,System.Int32)">
            <summary>
            任意进制转十进制
            </summary>
            <param name="str"></param>
            <param name="bin">进制</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.FromBinaryBig(System.String,System.Int32)">
            <summary>
            任意进制转大数十进制
            </summary>
            <param name="str"></param>
            <param name="bin">进制</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.Contains(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            检测字符串中是否包含列表中的关键词
            </summary>
            <param name="s">源字符串</param>
            <param name="keys">关键词列表</param>
            <param name="ignoreCase">忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.ContainsSymbol(System.String,System.String[])">
            <summary>
            判断是否包含符号
            </summary>
            <param name="str"></param>
            <param name="symbols"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            判断字符串是否为空或""
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.Mask(System.String,System.Char)">
            <summary>
            字符串掩码
            </summary>
            <param name="s">字符串</param>
            <param name="mask">掩码符</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchEmail(System.String,System.Boolean)">
            <summary>
            匹配Email
            </summary>
            <param name="s">源字符串</param>
            <param name="valid">是否验证有效性</param>
            <returns>匹配对象；是否匹配成功，若返回true，则会得到一个Match对象，否则为null</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MaskEmail(System.String,System.Char)">
            <summary>
            邮箱掩码
            </summary>
            <param name="s">邮箱</param>
            <param name="mask">掩码</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchUrl(System.String,System.Boolean@)">
            <summary>
            匹配完整格式的URL
            </summary>
            <param name="s">源字符串</param>
            <param name="isMatch">是否匹配成功，若返回true，则会得到一个Match对象，否则为null</param>
            <returns>匹配对象</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchUrl(System.String)">
            <summary>
            匹配完整格式的URL
            </summary>
            <param name="s">源字符串</param>
            <returns>是否匹配成功</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchIdentifyCard(System.String)">
            <summary>
            根据GB11643-1999标准权威校验中国身份证号码的合法性
            </summary>
            <param name="s">源字符串</param>
            <returns>是否匹配成功</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchInetAddress(System.String,System.Boolean@)">
            <summary>
            校验IP地址的正确性，同时支持IPv4和IPv6
            </summary>
            <param name="s">源字符串</param>
            <param name="isMatch">是否匹配成功，若返回true，则会得到一个Match对象，否则为null</param>
            <returns>匹配对象</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchInetAddress(System.String)">
            <summary>
            校验IP地址的正确性，同时支持IPv4和IPv6
            </summary>
            <param name="s">源字符串</param>
            <returns>是否匹配成功</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.IPToID(System.String)">
            <summary>
            IP地址转换成数字
            </summary>
            <param name="addr">IP地址</param>
            <returns>数字,输入无效IP地址返回0</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.IsPrivateIP(System.String)">
            <summary>
            判断IP是否是私有地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.IpAddressInRange(System.String,System.String,System.String)">
            <summary>
            判断IP地址在不在某个IP地址段
            </summary>
            <param name="input">需要判断的IP地址</param>
            <param name="begin">起始地址</param>
            <param name="ends">结束地址</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchPhoneNumber(System.String,System.Boolean@)">
            <summary>
            匹配手机号码
            </summary>
            <param name="s">源字符串</param>
            <param name="isMatch">是否匹配成功，若返回true，则会得到一个Match对象，否则为null</param>
            <returns>匹配对象</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchPhoneNumber(System.String)">
            <summary>
            匹配手机号码
            </summary>
            <param name="s">源字符串</param>
            <returns>是否匹配成功</returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.IsExternalAddress(System.String)">
            <summary>
            判断url是否是外部地址
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.ToByteArray(System.String)">
            <summary>
            转换成字节数组
            </summary>
            <param name="this"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.Crc32(System.String)">
            <summary>
            获取字符串crc32签名
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.Crc64(System.String)">
            <summary>
            获取字符串crc64签名
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.StringExtensions.MatchCNPatentNumber(System.String)">
            <summary>
            中国专利申请号（授权以后就是专利号）由两种组成
            2003年9月30号以前的9位（不带校验位是8号），校验位之前可能还会有一个点，例如：00262311, 002623110 或 00262311.0
            2003年10月1号以后的13位（不带校验位是12号），校验位之前可能还会有一个点，例如：200410018477, 2004100184779 或200410018477.9
            http://www.sipo.gov.cn/docs/pub/old/wxfw/zlwxxxggfw/hlwzljsxt/hlwzljsxtsyzn/201507/P020150713610193194682.pdf
            上面的文档中均不包括校验算法，但是下面的校验算法没有问题
            </summary>
            <param name="patnum">源字符串</param>
            <returns>是否匹配成功</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToInt32(System.String,System.Int32)">
            <summary>
            字符串转int
            </summary>
            <param name="s">源字符串</param>
            <param name="defaultValue">转换失败的默认值</param>
            <returns>int类型的数字</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToInt64(System.String,System.Int64)">
            <summary>
            字符串转long
            </summary>
            <param name="s">源字符串</param>
            <param name="defaultValue">转换失败的默认值</param>
            <returns>int类型的数字</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToDouble(System.String,System.Double)">
            <summary>
            字符串转double
            </summary>
            <param name="s">源字符串</param>
            <param name="defaultValue">转换失败的默认值</param>
            <returns>double类型的数据</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToDecimal(System.String,System.Decimal)">
            <summary>
            字符串转decimal
            </summary>
            <param name="s">源字符串</param>
            <param name="defaultValue">转换失败的默认值</param>
            <returns>int类型的数字</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToDecimal(System.Double)">
            <summary>
            字符串转decimal
            </summary>
            <param name="s">源字符串</param>
            <returns>int类型的数字</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToDouble(System.Decimal)">
            <summary>
            字符串转double
            </summary>
            <param name="s">源字符串</param>
            <returns>double类型的数据</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToInt32(System.Double)">
            <summary>
            将double转换成int
            </summary>
            <param name="num">double类型</param>
            <returns>int类型</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToInt32(System.Decimal)">
            <summary>
            将double转换成int
            </summary>
            <param name="num">double类型</param>
            <returns>int类型</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToDouble(System.Int32)">
            <summary>
            将int转换成double
            </summary>
            <param name="num">int类型</param>
            <returns>int类型</returns>
        </member>
        <member name="M:Masuit.Tools.ValueTypeConvertExtensions.ToDecimal(System.Int32)">
            <summary>
            将int转换成decimal
            </summary>
            <param name="num">int类型</param>
            <returns>int类型</returns>
        </member>
        <member name="T:Masuit.Tools.Files.FileExt">
            <summary>
            大文件操作扩展类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Files.FileExt.CopyToFile(System.IO.Stream,System.String,System.Int32)">
            <summary>
            以文件流的形式复制大文件
            </summary>
            <param name="fs">源</param>
            <param name="dest">目标地址</param>
            <param name="bufferSize">缓冲区大小，默认8MB</param>
        </member>
        <member name="M:Masuit.Tools.Files.FileExt.CopyToFileAsync(System.IO.Stream,System.String,System.Int32)">
            <summary>
            以文件流的形式复制大文件(异步方式)
            </summary>
            <param name="fs">源</param>
            <param name="dest">目标地址</param>
            <param name="bufferSize">缓冲区大小，默认8MB</param>
        </member>
        <member name="M:Masuit.Tools.Files.FileExt.SaveFile(System.IO.MemoryStream,System.String)">
            <summary>
            将内存流转储成文件
            </summary>
            <param name="ms"></param>
            <param name="filename"></param>
        </member>
        <member name="M:Masuit.Tools.Files.FileExt.GetFileMD5(System.IO.FileStream)">
            <summary>
            计算文件的 MD5 值
            </summary>
            <param name="fs">源文件流</param>
            <returns>MD5 值16进制字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Files.FileExt.GetFileSha1(System.IO.Stream)">
            <summary>
            计算文件的 sha1 值
            </summary>
            <param name="fs">源文件流</param>
            <returns>sha1 值16进制字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Files.FileExt.HashFile(System.IO.Stream,System.String)">
            <summary>
            计算文件的哈希值
            </summary>
            <param name="fs">被操作的源数据流</param>
            <param name="algo">加密算法</param>
            <returns>哈希值16进制字符串</returns>
        </member>
        <member name="T:Masuit.Tools.Files.INIFile">
            <summary>
            INI文件操作辅助类
            </summary>
        </member>
        <member name="F:Masuit.Tools.Files.INIFile.path">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:Masuit.Tools.Files.INIFile.#ctor(System.String)">
            <summary>
            传入INI文件路径构造对象
            </summary>
            <param name="iniPath">INI文件路径</param>
        </member>
        <member name="M:Masuit.Tools.Files.INIFile.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            写INI文件
            </summary>
            <param name="section">分组节点</param>
            <param name="key">关键字</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.Files.INIFile.IniReadValue(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="section">分组节点</param>
            <param name="key">关键字</param>
            <returns>值</returns>
        </member>
        <member name="M:Masuit.Tools.Files.INIFile.IniReadValues(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="section">分组节点</param>
            <param name="key">关键字</param>
            <returns>值的字节表现形式</returns>
        </member>
        <member name="M:Masuit.Tools.Files.INIFile.ClearAllSection">
            <summary>
            删除ini文件下所有段落
            </summary>
        </member>
        <member name="M:Masuit.Tools.Files.INIFile.ClearSection(System.String)">
            <summary>
            删除ini文件下指定段落下的所有键
            </summary>
            <param name="section">分组节点</param>
        </member>
        <member name="T:Masuit.Tools.Files.SevenZipCompressor">
            <summary>
            7z压缩
            </summary>
        </member>
        <member name="M:Masuit.Tools.Files.SevenZipCompressor.ZipStream(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            将多个文件压缩到一个内存流中，可保存为zip文件，方便于web方式下载
            </summary>
            <param name="files">多个文件路径，文件或文件夹，或网络路径http/https</param>
            <param name="rootdir"></param>
            <returns>文件流</returns>
        </member>
        <member name="M:Masuit.Tools.Files.SevenZipCompressor.Zip(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            压缩多个文件
            </summary>
            <param name="files">多个文件路径，文件或文件夹</param>
            <param name="zipFile">压缩到...</param>
            <param name="rootdir">压缩包内部根文件夹</param>
        </member>
        <member name="M:Masuit.Tools.Files.SevenZipCompressor.UnRar(System.String,System.String,System.Boolean)">
            <summary>
            解压rar文件
            </summary>
            <param name="rar">rar文件</param>
            <param name="dir">解压到...</param>
            <param name="ignoreEmptyDir">忽略空文件夹</param>
        </member>
        <member name="M:Masuit.Tools.Files.SevenZipCompressor.Extract(System.String,System.String,System.Boolean)">
            <summary>
            解压文件，自动检测压缩包类型
            </summary>
            <param name="compressedFile">rar文件</param>
            <param name="dir">解压到...</param>
            <param name="ignoreEmptyDir">忽略空文件夹</param>
        </member>
        <member name="M:Masuit.Tools.Files.SevenZipCompressor.Decompress(System.String,System.String,System.Boolean)">
            <summary>
            解压文件，自动检测压缩包类型
            </summary>
            <param name="compressedFile">rar文件</param>
            <param name="dir">解压到...</param>
            <param name="ignoreEmptyDir">忽略空文件夹</param>
        </member>
        <member name="M:Masuit.Tools.Files.SevenZipCompressor.CreateZipArchive(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            创建zip包
            </summary>
            <param name="files"></param>
            <param name="rootdir"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Files.SevenZipCompressor.GetFileEntryMaps(System.Collections.Generic.List{System.String})">
            <summary>
            获取文件路径和zip-entry的映射
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Files.ExtensionAttach">
            <summary>
            文件关联
            </summary>
        </member>
        <member name="M:Masuit.Tools.Files.ExtensionAttach.SaveReg(System.String,System.String)">
            <summary>
            关联文件
            </summary>
            <param name="filePathString">应用程序路径</param>
            <param name="pFileTypeName">文件类型</param>
        </member>
        <member name="M:Masuit.Tools.Files.ExtensionAttach.DelReg(System.String)">
            <summary>
            取消文件关联
            </summary>
            <param name="pFileTypeName">文件类型</param>
        </member>
        <member name="T:Masuit.Tools.Hardware.CpuInfo">
            <summary>
            CPU模型
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.DeviceID">
            <summary>
            设备ID
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.Type">
            <summary>
            CPU型号 
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.Manufacturer">
            <summary>
            CPU厂商
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.MaxClockSpeed">
            <summary>
            CPU最大睿频
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.CurrentClockSpeed">
            <summary>
            CPU的时钟频率
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.NumberOfCores">
            <summary>
            CPU核心数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.NumberOfLogicalProcessors">
            <summary>
            逻辑处理器核心数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.CpuLoad">
            <summary>
            CPU使用率
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.DataWidth">
            <summary>
            CPU位宽
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.CpuInfo.Temperature">
            <summary>
            核心温度
            </summary>
        </member>
        <member name="T:Masuit.Tools.Hardware.SystemInfo">
            <summary>
            硬件信息，部分功能需要C++支持
            </summary>
        </member>
        <member name="T:Masuit.Tools.Hardware.SystemInfo.CPU_INFO">
            <summary>
            定义CPU的信息结构
            </summary>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.SystemInfo.ProcessorCount">
            <summary>
            获取CPU核心数 
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.SystemInfo.CpuLoad">
            <summary>
            获取CPU占用率 %
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.SystemInfo.MemoryAvailable">
            <summary>
            获取可用内存
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.SystemInfo.PhysicalMemory">
            <summary>
            获取物理内存
            </summary>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.FindAllApps(System.Int32)">
            <summary>
            查找所有应用程序标题 
            </summary>
            <param name="handle">应用程序标题范型</param>
            <returns>所有应用程序集合</returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetCpuCount">
            <summary>
            获取CPU的数量
            </summary>
            <returns>CPU的数量</returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetCpuInfo">
            <summary>
            获取CPU信息
            </summary>
            <returns>CPU信息</returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetRamInfo">
            <summary>
            获取内存信息
            </summary>
            <returns>内存信息</returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetCPUTemperature">
            <summary>
            获取CPU温度
            </summary>
            <returns>CPU温度</returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetProcessorData">
            <summary>
            WMI接口获取CPU使用率
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetMemoryVData">
            <summary>
            获取虚拟内存使用率详情
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetUsageVirtualMemory">
            <summary>
            获取虚拟内存使用率
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetUsedVirtualMemory">
            <summary>
            获取虚拟内存已用大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetTotalVirtualMemory">
            <summary>
            获取虚拟内存总大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetMemoryPData">
            <summary>
            获取物理内存使用率详情描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetTotalPhysicalMemory">
            <summary>
            获取物理内存总数，单位B
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetFreePhysicalMemory">
            <summary>
            获取空闲的物理内存数，单位B
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetUsedPhysicalMemory">
            <summary>
            获取已经使用了的物理内存数，单位B
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetDiskData(Masuit.Tools.Hardware.DiskData)">
            <summary>
            获取硬盘的读写速率
            </summary>
            <param name="dd">读或写</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetNetData(Masuit.Tools.Hardware.NetData)">
            <summary>
            获取网络的传输速率
            </summary>
            <param name="nd">上传或下载</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetMacAddress">
            <summary>
            获取网卡硬件地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetLocalUsedIP">
            <summary>  
            获取当前使用的IP  
            </summary>  
            <returns></returns>  
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.GetLocalIPs">
            <summary>  
            获取本机所有的ip地址
            </summary>  
            <returns></returns>  
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.FormatBytes(System.Double)">
            <summary>
            将速度值格式化成字节单位
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.BootTime">
            <summary>
            获取计算机开机时间
            </summary>
            <returns>datetime</returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.QueryComputerSystem(System.String)">
            <summary>
            查询计算机系统信息
            </summary>
            <param name="type">类型名</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.QueryEnvironment(System.String)">
            <summary>
            获取环境变量
            </summary>
            <param name="type">环境变量名</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.DiskFree">
            <summary>
            获取磁盘可用空间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.DiskTotalSpace">
            <summary>
            获取磁盘总空间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.DiskUsedSpace">
            <summary>
            获取磁盘已用空间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Hardware.SystemInfo.DiskUsage">
            <summary>
            获取磁盘使用率
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Hardware.DiskData">
            <summary>
            磁盘数据
            </summary>
        </member>
        <member name="F:Masuit.Tools.Hardware.DiskData.ReadAndWrite">
            <summary>
            读写
            </summary>
        </member>
        <member name="F:Masuit.Tools.Hardware.DiskData.Read">
            <summary>
            读
            </summary>
        </member>
        <member name="F:Masuit.Tools.Hardware.DiskData.Write">
            <summary>
            写
            </summary>
        </member>
        <member name="T:Masuit.Tools.Hardware.MemoryInfo">
            <summary>
            定义内存的信息结构
            </summary>
        </member>
        <member name="T:Masuit.Tools.Hardware.NetData">
            <summary>
            网络数据
            </summary>
        </member>
        <member name="F:Masuit.Tools.Hardware.NetData.ReceivedAndSent">
            <summary>
            收发
            </summary>
        </member>
        <member name="F:Masuit.Tools.Hardware.NetData.Received">
            <summary>
            收
            </summary>
        </member>
        <member name="F:Masuit.Tools.Hardware.NetData.Sent">
            <summary>
            发
            </summary>
        </member>
        <member name="T:Masuit.Tools.Hardware.RamInfo">
            <summary>
            内存条模型
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.RamInfo.MemoryAvailable">
            <summary>
            可用物理内存
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.RamInfo.PhysicalMemory">
            <summary>
            物理总内存
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.RamInfo.TotalPageFile">
            <summary>
            分页内存总数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.RamInfo.AvailablePageFile">
            <summary>
            分页内存可用
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.RamInfo.TotalVirtual">
            <summary>
            虚拟内存总数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.RamInfo.AvailableVirtual">
            <summary>
            虚拟内存可用
            </summary>
        </member>
        <member name="P:Masuit.Tools.Hardware.RamInfo.MemoryUsage">
            <summary>
            内存使用率
            </summary>
        </member>
        <member name="T:Masuit.Tools.Hardware.SystemtimeInfo">
            <summary>
            定义系统时间的信息结构
            </summary>
        </member>
        <member name="T:Masuit.Tools.Hardware.Unit">
            <summary>
            字节单位枚举
            </summary>
        </member>
        <member name="T:Masuit.Tools.Html.HtmlTools">
            <summary>
            html工具类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.HtmlSantinizerStandard(System.String)">
            <summary>
            标准的防止html的xss净化器
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.HtmlSantinizerCustom(System.String,System.String[],System.String[],System.String[])">
            <summary>
            自定义的防止html的xss净化器
            </summary>
            <param name="html">源html</param>
            <param name="labels">需要移除的标签集合</param>
            <param name="attributes">需要移除的属性集合</param>
            <param name="styles">需要移除的样式集合</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.RemoveHtmlTag(System.String,System.Int32)">
            <summary>
            去除html标签后并截取字符串
            </summary>
            <param name="html">源html</param>
            <param name="length">截取长度</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.ClearHtml(System.String)">
            <summary>
            清理Word文档转html后的冗余标签属性
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.ReplaceHtmlImgSource(System.String,System.String)">
            <summary>
            替换html的img路径为绝对路径
            </summary>
            <param name="html"></param>
            <param name="imgDest"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.ConvertImgSrcToRelativePath(System.String)">
            <summary>
            将src的绝对路径换成相对路径
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.MatchImgTags(System.String)">
            <summary>
            匹配html的所有img标签集合
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.MatchImgSrcs(System.String)">
            <summary>
            匹配html的所有img标签的src集合
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.MatchFirstImgSrc(System.String)">
            <summary>
            获取html中第一个img标签的src
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.MatchRandomImgSrc(System.String)">
            <summary>
            随机获取html代码中的img标签的src属性
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.MatchSeqRandomImgSrc(System.String)">
            <summary>
            按顺序优先获取html代码中的img标签的src属性
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.StrFormat(System.String)">
            <summary>
            替换回车换行符为html换行符
            </summary>
            <param name="str">html</param>
        </member>
        <member name="M:Masuit.Tools.Html.HtmlTools.EncodeHtml(System.String)">
            <summary>
            替换html字符
            </summary>
            <param name="strHtml">html</param>
        </member>
        <member name="T:Masuit.Tools.Linq.LinqExtension">
            <summary>
            LINQ扩展方法
            </summary>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            与连接
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="left">左条件</param>
            <param name="right">右条件</param>
            <returns>新表达式</returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            或连接
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="left">左条件</param>
            <param name="right">右条件</param>
            <returns>新表达式</returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MaxOrDefault``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            取最大值
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MaxOrDefault``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            取最大值
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MaxOrDefault``1(System.Linq.IQueryable{``0})">
            <summary>
            取最大值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MaxOrDefault``1(System.Linq.IQueryable{``0},``0)">
            <summary>
            取最大值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MaxOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1)">
            <summary>
            取最大值
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MaxOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            取最大值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MaxOrDefault``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            取最大值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MinOrDefault``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            取最小值
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MinOrDefault``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            取最小值
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MinOrDefault``1(System.Linq.IQueryable{``0})">
            <summary>
            取最小值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MinOrDefault``1(System.Linq.IQueryable{``0},``0)">
            <summary>
            取最小值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MinOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            取最小值
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MinOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1)">
            <summary>
            取最小值
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MinOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            取最小值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Linq.LinqExtension.MinOrDefault``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            取最小值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Logging.LogInfo">
            <summary>
            日志信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.ThreadId">
            <summary>
            线程id
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.Source">
            <summary>
            异常源
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.Message">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.Exception">
            <summary>
            异常对象
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.ExceptionType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.RequestUrl">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogInfo.UserAgent">
            <summary>
            客户端代理
            </summary>
        </member>
        <member name="T:Masuit.Tools.Logging.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="F:Masuit.Tools.Logging.LogLevel.Info">
            <summary>
            信息级别
            </summary>
        </member>
        <member name="F:Masuit.Tools.Logging.LogLevel.Debug">
            <summary>
            debug级别
            </summary>
        </member>
        <member name="F:Masuit.Tools.Logging.LogLevel.Error">
            <summary>
            错误级别
            </summary>
        </member>
        <member name="F:Masuit.Tools.Logging.LogLevel.Fatal">
            <summary>
            致命级别
            </summary>
        </member>
        <member name="T:Masuit.Tools.Logging.LogManager">
            <summary>
            日志组件
            </summary>
        </member>
        <member name="E:Masuit.Tools.Logging.LogManager.Event">
            <summary>
            自定义事件
            </summary>
        </member>
        <member name="P:Masuit.Tools.Logging.LogManager.LogDirectory">
            <summary>
            日志存放目录，默认日志放在当前应用程序运行目录下的logs文件夹中
            </summary>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Info(System.String)">
            <summary>
            写入Info级别的日志
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Info(System.String,System.String)">
            <summary>
            写入Info级别的日志
            </summary>
            <param name="source"></param>
            <param name="info"></param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Info(System.Type,System.String)">
            <summary>
            写入Info级别的日志
            </summary>
            <param name="source"></param>
            <param name="info"></param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Debug(System.String)">
            <summary>
            写入debug级别日志
            </summary>
            <param name="debug">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Debug(System.String,System.String)">
            <summary>
            写入debug级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="debug">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Debug(System.Type,System.String)">
            <summary>
            写入debug级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="debug">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Error(System.Exception)">
            <summary>
            写入error级别日志
            </summary>
            <param name="error">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Error(System.Type,System.Exception)">
            <summary>
            写入error级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="error">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Error(System.Type,System.String)">
            <summary>
            写入error级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="error">异常信息</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Error(System.String,System.Exception)">
            <summary>
            写入error级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="error">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Error(System.String,System.String)">
            <summary>
            写入error级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="error">异常信息</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Fatal(System.Exception)">
            <summary>
            写入fatal级别日志
            </summary>
            <param name="fatal">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Fatal(System.Type,System.Exception)">
            <summary>
            写入fatal级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="fatal">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Fatal(System.Type,System.String)">
            <summary>
            写入fatal级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="fatal">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Fatal(System.String,System.Exception)">
            <summary>
            写入fatal级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="fatal">异常对象</param>
        </member>
        <member name="M:Masuit.Tools.Logging.LogManager.Fatal(System.String,System.String)">
            <summary>
            写入fatal级别日志
            </summary>
            <param name="source">异常源的类型</param>
            <param name="fatal">异常对象</param>
        </member>
        <member name="P:Masuit.Tools.Maths.RadarChart.Data">
            <summary>
            向量长度集合
            </summary>
        </member>
        <member name="P:Masuit.Tools.Maths.RadarChart.StartAngle">
            <summary>
            起始弧度
            </summary>
        </member>
        <member name="M:Masuit.Tools.Maths.RadarChart.#ctor(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            多边形
            </summary>
            <param name="data">向量长度集合</param>
            <param name="startAngle">起始弧度</param>
        </member>
        <member name="M:Masuit.Tools.Maths.RadarChart.GetPoints">
            <summary>
            获取每个点的坐标
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Maths.RadarChartEngine">
            <summary>
            雷达图引擎
            </summary>
        </member>
        <member name="M:Masuit.Tools.Maths.RadarChartEngine.ComputeArea(System.Collections.Generic.List{Masuit.Tools.Maths.Point2D})">
            <summary>
            计算多边形面积的函数
            (以原点为基准点,分割为多个三角形)
            定理：任意多边形的面积可由任意一点与多边形上依次两点连线构成的三角形矢量面积求和得出。矢量面积=三角形两边矢量的叉乘。
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Maths.RadarChartEngine.ComputeIntersection(Masuit.Tools.Maths.RadarChart,Masuit.Tools.Maths.RadarChart)">
            <summary>
            获取两个多边形的相交区域
            </summary>
            <param name="first">多边形1</param>
            <param name="second">多边形2</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Media.ImageUtilities">
            <summary>
            图片处理
            </summary>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.CutForSquare(System.IO.Stream,System.String,System.Int32,System.Int32)">
            <summary>
            正方型裁剪
            以图片中心为轴心，截取正方型，然后等比缩放
            用于头像处理
            </summary>
            <param name="fromFile">原图Stream对象</param>
            <param name="fileSaveUrl">缩略图存放地址</param>
            <param name="side">指定的边长（正方型）</param>
            <param name="quality">质量（范围0-100）</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.CutForCustom(System.IO.Stream,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            指定长宽裁剪
            按模版比例最大范围的裁剪图片并缩放至模版尺寸
            </summary>
            <param name="fromFile">原图Stream对象</param>
            <param name="fileSaveUrl">保存路径</param>
            <param name="maxWidth">最大宽(单位:px)</param>
            <param name="maxHeight">最大高(单位:px)</param>
            <param name="quality">质量（范围0-100）</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.ZoomAuto(System.IO.Stream,System.String,System.Double,System.Double,System.String,System.String)">
            <summary>
            图片等比缩放
            </summary>
            <param name="fromFile">原图Stream对象</param>
            <param name="savePath">缩略图存放地址</param>
            <param name="targetWidth">指定的最大宽度</param>
            <param name="targetHeight">指定的最大高度</param>
            <param name="watermarkText">水印文字(为""表示不使用水印)</param>
            <param name="watermarkImage">水印图片路径(为""表示不使用水印)</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.IsWebImage(System.String)">
            <summary>
            判断文件类型是否为WEB格式图片
            (注：JPG,GIF,BMP,PNG)
            </summary>
            <param name="contentType">HttpPostedFile.ContentType</param>
            <returns>是否为WEB格式图片</returns>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.CutImage(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            裁剪图片 -- 用GDI+   
            </summary>
            <param name="b">原始Bitmap</param>
            <param name="rec">裁剪区域</param>
            <returns>剪裁后的Bitmap</returns>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>  
             Resize图片   
            </summary>  
            <param name="bmpp">原始Bitmap </param>  
            <param name="newWidth">新的宽度</param>  
            <param name="newHeight">新的高度</param>  
            <returns>处理以后的图片</returns>  
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.CutAndResize(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            裁剪并缩放
            </summary>
            <param name="bmpp">原始图片</param>
            <param name="rec">裁剪的矩形区域</param>
            <param name="newWidth">新的宽度</param>  
            <param name="newHeight">新的高度</param>  
            <returns>处理以后的图片</returns>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.CompressImage(System.String,System.String,System.Byte,System.Int32,System.Boolean)">
            <summary>
            无损压缩图片
            </summary>
            <param name="sFile">原图片地址</param>
            <param name="dFile">压缩后保存图片地址</param>
            <param name="quality">压缩质量（数字越小压缩率越高）1-100</param>
            <param name="size">压缩后图片的最大大小</param>
            <param name="sfsc">是否是第一次调用</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.CompressImage(System.IO.Stream,System.IO.Stream,System.Byte,System.Int32,System.Boolean)">
            <summary>
            无损压缩图片
            </summary>
            <param name="src">原图片文件流</param>
            <param name="dest">压缩后图片文件流</param>
            <param name="quality">压缩质量（数字越小压缩率越高）1-100</param>
            <param name="size">压缩后图片的最大大小</param>
            <param name="sfsc">是否是第一次调用</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.MakeThumbnail(System.Drawing.Image,System.String,System.Int32,System.Int32,Masuit.Tools.Media.ThumbnailCutMode)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImage">原图</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>    
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.LDPic(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            调整光暗
            </summary>
            <param name="source">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
            <param name="val">增加或减少的光暗值</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.RePic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            反色处理
            </summary>
            <param name="source">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.Relief(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            浮雕处理
            </summary>
            <param name="oldBitmap">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.ResizeImageAsync(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            拉伸图片
            </summary>
            <param name="bmpp">原始图片</param>
            <param name="newW">新的宽度</param>
            <param name="newH">新的高度</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.FilPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            滤色处理
            </summary>
            <param name="source">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.RevPicLR(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            左右翻转
            </summary>
            <param name="source">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.RevPicUD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            上下翻转
            </summary>
            <param name="source">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.Compress(System.Drawing.Image,System.String)">
            <summary>
            压缩到指定尺寸
            </summary>
            <param name="img"></param>
            <param name="newfile">新文件</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.Gray(System.Drawing.Color)">
            <summary>
            图片灰度化
            </summary>
            <param name="c">输入颜色</param>
            <returns>输出颜色</returns>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.BWPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            转换为黑白图片
            </summary>
            <param name="source">要进行处理的图片</param>
            <param name="width">图片的长度</param>
            <param name="height">图片的高度</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.GetFrames(System.Drawing.Image,System.String)">
            <summary>
            获取图片中的各帧
            </summary>
            <param name="gif">源gif</param>
            <param name="pSavedPath">保存路径</param>
        </member>
        <member name="M:Masuit.Tools.Media.ImageUtilities.SaveDataUriAsImageFile(System.String)">
            <summary>
            将dataUri保存为图片
            </summary>
            <param name="source">dataUri数据源</param>
            <returns></returns>
            <exception cref="T:System.Exception">操作失败。</exception>
        </member>
        <member name="P:Masuit.Tools.Media.ImageWatermarker.SkipWatermarkForSmallImages">
            <summary>
            是否跳过小缩略图
            </summary>
        </member>
        <member name="P:Masuit.Tools.Media.ImageWatermarker.SmallImagePixelsThreshold">
            <summary>
            小图像素大小
            </summary>
        </member>
        <member name="M:Masuit.Tools.Media.ImageWatermarker.AddWatermark(System.String,System.Drawing.Color,Masuit.Tools.Media.WatermarkPosition,System.Int32,System.Int32,System.Drawing.Font,System.Boolean)">
            <summary>
            添加水印
            </summary>
            <param name="watermarkText">水印文字</param>
            <param name="color">水印颜色</param>
            <param name="watermarkPosition">水印位置</param>
            <param name="textPadding">边距</param>
            <param name="fontSize">字体大小</param>
            <param name="font">字体</param>
            <param name="textAntiAlias">不提示的情况下使用抗锯齿标志符号位图来绘制每个字符。
               由于抗锯齿质量就越好。
               因为关闭了提示，词干宽度之间的差异可能非常明显。</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Media.ThumbnailCutMode">
            <summary>
            图像裁剪模式
            </summary>
        </member>
        <member name="F:Masuit.Tools.Media.ThumbnailCutMode.LockHeight">
            <summary>
            锁定高度
            </summary>
        </member>
        <member name="F:Masuit.Tools.Media.ThumbnailCutMode.LockWidth">
            <summary>
            锁定宽度
            </summary>
        </member>
        <member name="F:Masuit.Tools.Media.ThumbnailCutMode.Fixed">
            <summary>
            固定宽高
            </summary>
        </member>
        <member name="F:Masuit.Tools.Media.ThumbnailCutMode.Cut">
            <summary>
            裁剪
            </summary>
        </member>
        <member name="T:Masuit.Tools.AspNetCore.Mime.ContentType">
            <summary>
            默认MIME映射器，可以根据文件扩展名获取标准内容类型。
            </summary>
        </member>
        <member name="F:Masuit.Tools.AspNetCore.Mime.ContentType.DefaultMime">
            <summary>
            默认Mime  - 如果没有找到任何其他映射则作为默认的Mime-Type
            </summary>
        </member>
        <member name="T:Masuit.Tools.AspNetCore.Mime.IMimeMapper">
            <summary>
            Mime
            </summary>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.IMimeMapper.Extend(Masuit.Tools.AspNetCore.Mime.MimeMappingItem[])">
            <summary>
            扩展Mime
            </summary>
            <param name="extensions"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.IMimeMapper.GetMimeFromExtension(System.String)">
            <summary>
            根据扩展名获取mime type
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.IMimeMapper.GetMimeFromPath(System.String)">
            <summary>
            根据路径获取Mime Type
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.AspNetCore.Mime.MimeMapper">
            <summary>
            默认MIME映射器，可以根据文件扩展名获取标准内容类型。
            </summary>
        </member>
        <member name="F:Masuit.Tools.AspNetCore.Mime.MimeMapper.DefaultMime">
            <summary>
            默认Mime  - 如果没有找到任何其他映射则作为默认的Mime-Type
            </summary>
        </member>
        <member name="F:Masuit.Tools.AspNetCore.Mime.MimeMapper._pathExtensionPattern">
            <summary>
            在文件路径中搜索文件扩展名的默认正则表达式
            </summary>
        </member>
        <member name="P:Masuit.Tools.AspNetCore.Mime.MimeMapper.MimeTypes">
            <summary>
            Mime类型与扩展名的映射字典(Content types)
            </summary>
        </member>
        <member name="P:Masuit.Tools.AspNetCore.Mime.MimeMapper.ExtTypes">
            <summary>
            mime类型与扩展名的映射关系
            </summary>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.MimeMapper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.MimeMapper.#ctor(Masuit.Tools.AspNetCore.Mime.MimeMappingItem[])">
            <summary>
            
            </summary>
            <param name="extensions"></param>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.MimeMapper.Extend(Masuit.Tools.AspNetCore.Mime.MimeMappingItem[])">
            <summary>
            扩展mime映射规则的标准列表。扩展的具有更高的优先级 - 如果扩展具有与标准项相同的扩展名，则会覆盖默认的mime
            </summary>
            <param name="extensions"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.MimeMapper.GetMimeFromExtension(System.String)">
            <summary>
            返回特定文件扩展名的Content-Type，如果未找到任何对应关系，则返回默认值
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.MimeMapper.GetExtensionFromMime(System.String)">
            <summary>
            返回特定Content-Type的文件扩展名，如果未找到任何对应关系，则返回空值
            </summary>
            <param name="mime"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.MimeMapper.GetMimeFromPath(System.String)">
            <summary>
            根据路径获取MimeType
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.AspNetCore.Mime.MimeMapper.GetExtension(System.String)">
            <summary>
            获取扩展名
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.AspNetCore.Mime.MimeMappingItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Masuit.Tools.AspNetCore.Mime.MimeMappingItem.Extension">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="P:Masuit.Tools.AspNetCore.Mime.MimeMappingItem.MimeType">
            <summary>
            MimeType
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.AddressComponent">
            <summary>
            地理信息成分
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.CountryCode">
            <summary>
            国家代码
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.District">
            <summary>
            区
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.Street">
            <summary>
            街道
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.StreetNumber">
            <summary>
            门牌号
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.Direction">
            <summary>
            方位
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressComponent.Distance">
            <summary>
            距离
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.AddressResult">
            <summary>
            返回结果集
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressResult.Location">
            <summary>
            经纬度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressResult.FormattedAddress">
            <summary>
            详细地址
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressResult.Business">
            <summary>
            商业地址
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressResult.AddressComponent">
            <summary>
            地理信息成分
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressResult.Pois">
            <summary>
            参考地址
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressResult.SematicDescription">
            <summary>
            语义描述
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.BaiduIP">
            <summary>
            百度IP接口的信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.BaiduIP.Address">
            <summary>
            基本信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.BaiduIP.AddressInfo">
            <summary>
            基本地理信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.BaiduIP.Status">
            <summary>
            返回状态，0正常，1出错
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.AddressInfo">
            <summary>
            基本地理信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressInfo.Address">
            <summary>
            基本地址
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.AddressInfo.LatiLongitude">
            <summary>
            经纬度
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.LatiLongitude">
            <summary>
            经纬度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.LatiLongitude.X">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.LatiLongitude.Y">
            <summary>
            纬度
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.DateTimeRange">
            <summary>
            时间段
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.DateTimeRange.Start">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.DateTimeRange.End">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.HasIntersect(System.DateTime,System.DateTime)">
            <summary>
            是否相交
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.HasIntersect(Masuit.Tools.Models.DateTimeRange)">
            <summary>
            是否相交
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.Intersect(Masuit.Tools.Models.DateTimeRange)">
            <summary>
            相交时间段
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.Intersect(System.DateTime,System.DateTime)">
            <summary>
            相交时间段
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.Contains(Masuit.Tools.Models.DateTimeRange)">
            <summary>
            是否包含时间段
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.Contains(System.DateTime,System.DateTime)">
            <summary>
            是否包含时间段
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.In(Masuit.Tools.Models.DateTimeRange)">
            <summary>
            是否在时间段内
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.In(System.DateTime,System.DateTime)">
            <summary>
            是否在时间段内
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.Union(Masuit.Tools.Models.DateTimeRange)">
            <summary>
            合并时间段
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.Union(System.DateTime,System.DateTime)">
            <summary>
            合并时间段
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.DateTimeRange.ToString">
            <summary>返回一个表示当前对象的 string。</summary>
            <returns>表示当前对象的字符串。</returns>
        </member>
        <member name="P:Masuit.Tools.Models.Email.Username">
            <summary>
            发件人用户名
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Email.Password">
            <summary>
            发件人邮箱密码
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Email.SmtpPort">
            <summary>
            发送服务器端口号，默认25
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Email.SmtpServer">
            <summary>
            发送服务器地址
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Email.Subject">
            <summary>
            邮件标题
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Email.Body">
            <summary>
            邮件正文
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Email.Tos">
            <summary>
            收件人，多个收件人用英文逗号隔开
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Email.EnableSsl">
            <summary>
            是否启用SSL，默认已启用
            </summary>
        </member>
        <member name="M:Masuit.Tools.Models.Email.GetClient">
            <summary>
            邮件消息对象
            </summary>
        </member>
        <member name="M:Masuit.Tools.Models.Email.SendAsync(System.Action{System.String})">
            <summary>
            使用异步发送邮件
            </summary>
            <param name="completedCallback">邮件发送后的回调方法</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.Email.Send">
            <summary>
            使用同步发送邮件
            </summary>
        </member>
        <member name="M:Masuit.Tools.Models.Email.SendCompletedCallback(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            异步操作完成后执行回调方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Masuit.Tools.Models.EmailAddress.op_Implicit(System.String)~Masuit.Tools.Models.EmailAddress">
            <summary>
            
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Models.EmailAddress.op_Implicit(Masuit.Tools.Models.EmailAddress)~System.String">
            <summary>
            
            </summary>
            <param name="email"></param>
        </member>
        <member name="M:Masuit.Tools.Models.EmailAddress.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Masuit.Tools.Models.IspInfo">
            <summary>
            ISP信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.IspInfo.ISPName">
            <summary>
            运营商
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.Location">
            <summary>
            经纬度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Location.Lng">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Location.Lat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.PagedList`1">
            <summary>
            分页集合
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Masuit.Tools.Models.PagedList`1.Data">
            <summary>
            数据集
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PagedList`1.CurrentPage">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PagedList`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PagedList`1.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PagedList`1.TotalCount">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PagedList`1.CurrentCount">
            <summary>
            当前页数据条数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PagedList`1.HasPrev">
            <summary>
            是否有前一页
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PagedList`1.HasNext">
            <summary>
            是否有后一页
            </summary>
        </member>
        <member name="M:Masuit.Tools.Models.PagedList`1.#ctor(System.Collections.Generic.List{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            分页数据
            </summary>
            <param name="items">数据集</param>
            <param name="page">当前页</param>
            <param name="size">页大小</param>
            <param name="count">总条数</param>
        </member>
        <member name="M:Masuit.Tools.Models.IQueryableExt.ToPagedList``1(System.Linq.IOrderedQueryable{``0},System.Int32,System.Int32)">
            <summary>
            生成分页集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="page">当前页</param>
            <param name="size">页大小</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Models.PhysicsAddress">
            <summary>
            详细地理信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PhysicsAddress.Status">
            <summary>
            返回状态，0正常，1出错
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.PhysicsAddress.AddressResult">
            <summary>
            返回结果集
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.Pois">
            <summary>
            参考位置
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Pois.AddressDetail">
            <summary>
            地理位置详细
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Pois.Direction">
            <summary>
            方位
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Pois.Distance">
            <summary>
            距离
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Pois.Name">
            <summary>
            建筑物名字
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Pois.PoiType">
            <summary>
            建筑物类型
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Pois.Point">
            <summary>
            经纬度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.Pois.Tag">
            <summary>
            标签
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.TaobaoIP">
            <summary>
            淘宝IP接口信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.TaobaoIP.Code">
            <summary>
            返回状态码
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.TaobaoIP.IpData">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:Masuit.Tools.Models.IPData">
            <summary>
            淘宝IP接口信息
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.IPData.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.IPData.Region">
            <summary>
            省
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.IPData.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:Masuit.Tools.Models.IPData.Isp">
            <summary>
            ISP
            </summary>
        </member>
        <member name="T:Masuit.Tools.Net.FtpClient">
            <summary>
            FTP客户端操作类
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.FtpClient.FtpServer">
            <summary>
            Ftp服务器ip
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.FtpClient.Username">
            <summary>
            Ftp 指定用户名
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.FtpClient.Password">
            <summary>
            Ftp 指定用户密码
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.GetAnonymousClient(System.String)">
            <summary>
            获取一个匿名登录的ftp客户端
            </summary>
            <param name="serverIp">服务器IP地址</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.GetClient(System.String,System.String,System.String)">
            <summary>
            获取一个匿名登录的ftp客户端
            </summary>
            <param name="serverIp">服务器ip</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.Download(System.String,System.String,System.Boolean,System.Action{System.Int32,System.Int32})">
            <summary>
            从FTP服务器下载文件，指定本地路径和本地文件名
            </summary>
            <param name="remoteFileName">远程文件名</param>
            <param name="localFileName">保存本地的文件名（包含路径）</param>
            <param name="ifCredential">是否启用身份验证（false：表示允许用户匿名下载）</param>
            <param name="updateProgress">报告进度的处理(第一个参数：总大小，第二个参数：当前进度)</param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.BrokenDownload(System.String,System.String,System.Boolean,System.Int64,System.Action{System.Int32,System.Int32})">
            <summary>
            从FTP服务器下载文件，指定本地路径和本地文件名（支持断点下载）
            </summary>
            <param name="remoteFileName">远程文件名</param>
            <param name="localFileName">保存本地的文件名（包含路径）</param>
            <param name="ifCredential">是否启用身份验证（false：表示允许用户匿名下载）</param>
            <param name="size">已下载文件流大小</param>
            <param name="updateProgress">报告进度的处理(第一个参数：总大小，第二个参数：当前进度)</param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.Download(System.String,System.String,System.Boolean,System.Boolean,System.Action{System.Int32,System.Int32})">
            <summary>
            从FTP服务器下载文件，指定本地路径和本地文件名
            </summary>
            <param name="remoteFileName">远程文件名</param>
            <param name="localFileName">保存本地的文件名（包含路径）</param>
            <param name="ifCredential">是否启用身份验证（false：表示允许用户匿名下载）</param>
            <param name="updateProgress">报告进度的处理(第一个参数：总大小，第二个参数：当前进度)</param>
            <param name="brokenOpen">是否断点下载：true 会在localFileName 找是否存在已经下载的文件，并计算文件流大小</param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.UploadFile(System.String,System.String,System.Action{System.Int32,System.Int32})">
            <summary>
            上传文件到FTP服务器
            </summary>
            <param name="relativePath">相对目录</param>
            <param name="localFullPathName">本地带有完整路径的文件名</param>
            <param name="updateProgress">报告进度的处理(第一个参数：总大小，第二个参数：当前进度)</param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.UploadBroken(System.String,System.String,System.Action{System.Int32,System.Int32})">
            <summary>
            上传文件到FTP服务器(断点续传)
            </summary>
            <param name="localFullPath">本地文件全路径名称：C:\Users\JianKunKing\Desktop\IronPython脚本测试工具</param>
            <param name="remoteFilepath">远程文件所在文件夹路径</param>
            <param name="updateProgress">报告进度的处理(第一个参数：总大小，第二个参数：当前进度)</param>
            <returns></returns> 
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.RemoveSpaces(System.String)">
            <summary>
            去除空格
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.GetFileSize(System.String,System.String)">
            <summary>
            获取已上传文件大小
            </summary>
            <param name="filePath">文件名称</param>
            <param name="remoteFilepath">服务器文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.GetFilesDetails(System.String)">
            <summary>
            获取当前目录下明细(包含文件和文件夹)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.GetFiles(System.String,System.String)">
            <summary>
            获取当前目录下文件列表(仅文件)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.GetDirectories(System.String)">
            <summary>
            获取当前目录下所有的文件夹列表(仅文件夹)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.Delete(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.RemoveDirectory(System.String)">
            <summary>
            删除文件夹
            </summary>
            <param name="dirPath"></param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.GetFileSize(System.String)">
            <summary>
            获取指定文件大小
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.DirectoryExist(System.String)">
            <summary>
            判断当前目录下指定的子目录是否存在
            </summary>
            <param name="remoteDirPath">指定的目录名</param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.FileExist(System.String)">
            <summary>
            判断当前目录下指定的文件是否存在
            </summary>
            <param name="remoteFileName">远程文件名</param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.MakeDir(System.String,System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="relativePath">路径</param>
            <param name="newDir">新建文件夹</param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.Rename(System.String,System.String,System.String)">
            <summary>
            改名
            </summary>
            <param name="relativePath">相对路径</param>
            <param name="currentFilename"></param>
            <param name="newFilename"></param>
        </member>
        <member name="M:Masuit.Tools.Net.FtpClient.MoveFile(System.String,System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="relativePath">相对路径</param>
            <param name="currentFilename"></param>
            <param name="newDirectory"></param>
        </member>
        <member name="T:Masuit.Tools.Net.FileMergeProgressChangedEventHandler">
            <summary>
            文件合并改变事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Masuit.Tools.Net.MultiThreadDownloader">
            <summary>
            多线程下载器
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.RangeAllowed">
            <summary>
            RangeAllowed
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.TempFileDirectory">
            <summary>
            临时文件夹
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.Url">
            <summary>
            url地址
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.NumberOfParts">
            <summary>
            第几部分
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.TotalBytesReceived">
            <summary>
            已接收字节数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.TotalProgress">
            <summary>
            总进度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.Size">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.TotalSpeedInBytes">
            <summary>
            下载速度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.PartialDownloaderList">
            <summary>
            下载块
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.MultiThreadDownloader.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="E:Masuit.Tools.Net.MultiThreadDownloader.TotalProgressChanged">
            <summary>
            总下载进度更新事件
            </summary>
        </member>
        <member name="E:Masuit.Tools.Net.MultiThreadDownloader.FileMergeProgressChanged">
            <summary>
            文件合并事件
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            多线程下载管理器
            </summary>
            <param name="sourceUrl"></param>
            <param name="tempDir"></param>
            <param name="savePath"></param>
            <param name="numOfParts"></param>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.#ctor(System.String,System.String,System.Int32)">
            <summary>
            多线程下载管理器
            </summary>
            <param name="sourceUrl"></param>
            <param name="savePath"></param>
            <param name="numOfParts"></param>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.#ctor(System.String,System.Int32)">
            <summary>
            多线程下载管理器
            </summary>
            <param name="sourceUrl"></param>
            <param name="numOfParts"></param>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.WaitOrResumeAll(System.Collections.Generic.List{Masuit.Tools.Net.PartialDownloader},System.Boolean)">
            <summary>
            暂停或继续
            </summary>
            <param name="list"></param>
            <param name="wait"></param>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.Configure(System.Action{System.Net.HttpWebRequest})">
            <summary>
            配置请求头
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.GetContentLength(System.Boolean@,System.String@)">
            <summary>
            获取内容长度
            </summary>
            <param name="rangeAllowed"></param>
            <param name="redirectedUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.Pause">
            <summary>
            暂停下载
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.Start">
            <summary>
            开始下载
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.MultiThreadDownloader.Resume">
            <summary>
            唤醒下载
            </summary>
        </member>
        <member name="T:Masuit.Tools.Net.PartialDownloader">
            <summary>
            部分下载器
            </summary>
        </member>
        <member name="E:Masuit.Tools.Net.PartialDownloader.DownloadPartCompleted">
            <summary>
            这部分完成事件
            </summary>
        </member>
        <member name="E:Masuit.Tools.Net.PartialDownloader.DownloadPartProgressChanged">
            <summary>
            部分下载进度改变事件
            </summary>
        </member>
        <member name="E:Masuit.Tools.Net.PartialDownloader.DownloadPartStopped">
            <summary>
            部分下载停止事件
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.Stopped">
            <summary>
            下载已停止
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.Completed">
            <summary>
            下载已完成
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.Progress">
            <summary>
            下载进度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.Directory">
            <summary>
            下载目录
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.TotalBytesRead">
            <summary>
            已读字节数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.ContentLength">
            <summary>
            内容长度
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.RangeAllowed">
            <summary>
            RangeAllowed
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.To">
            <summary>
            to
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.From">
            <summary>
            from
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.CurrentPosition">
            <summary>
            当前位置
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.RemainingBytes">
            <summary>
            剩余字节数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.FullPath">
            <summary>
            完整路径
            </summary>
        </member>
        <member name="P:Masuit.Tools.Net.PartialDownloader.SpeedInBytes">
            <summary>
            下载速度
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.PartialDownloader.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            部分块下载
            </summary>
            <param name="url"></param>
            <param name="dir"></param>
            <param name="fileGuid"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="rangeAllowed"></param>
        </member>
        <member name="M:Masuit.Tools.Net.PartialDownloader.Start(System.Action{System.Net.HttpWebRequest})">
            <summary>
            启动下载
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.PartialDownloader.Stop">
            <summary>
            下载停止
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.PartialDownloader.Wait">
            <summary>
            暂停等待下载
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.PartialDownloader.ResumeAfterWait">
            <summary>
            稍后唤醒
            </summary>
        </member>
        <member name="T:Masuit.Tools.Net.SocketClient">
            <summary>
            Socket客户端操作类
            </summary>
        </member>
        <member name="F:Masuit.Tools.Net.SocketClient.m_maxpacket">
            <summary>
            设置数据缓冲区大小 默认1024
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ListenerSocket(System.Net.Sockets.TcpListener)">
            <summary>
            服务器侦听方法 返回null则说明没有链接上
            </summary>
            <returns>返回一个套接字(Socket)</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ListenerStream(System.Net.Sockets.TcpListener)">
            <summary>
            服务器侦听方法 返回null则说明没有链接上
            </summary>
            <param name="listener">TCP监听对象</param>
            <returns>返回一个网络流</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ConnectSocket(System.Net.Sockets.TcpClient,System.Net.IPEndPoint)">
            <summary>
            从客户端连接获取socket对象
            </summary>
            <param name="tcpclient">TCP客户端</param>
            <param name="ipendpoint">客户端节点</param>
            <returns>客户端socket</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ConnectSocket(System.Net.Sockets.TcpClient,System.Net.IPAddress,System.Int32)">
            <summary>
            从客户端连接获取socket对象
            </summary>
            <param name="tcpclient">TCP客户端</param>
            <param name="ipadd">IP地址</param>
            <param name="port">端口号</param>
            <returns>客户端socket</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ConnectStream(System.Net.Sockets.TcpClient,System.Net.IPEndPoint)">
            <summary>
            从客户端获取网络流对象
            </summary>
            <param name="tcpclient">TCP客户端</param>
            <param name="ipendpoint">客户端节点</param>
            <returns>客户端的网络流</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ConnectStream(System.Net.Sockets.TcpClient,System.Net.IPAddress,System.Int32)">
            <summary>
            从客户端获取网络流对象
            </summary>
            <param name="tcpclient">TCP客户端</param>
            <param name="ipadd">IP地址</param>
            <param name="port">端口号</param>
            <returns>客户端网络流对象</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ReceiveFixData(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            接受固定长度字符串
            </summary>
            <param name="socket">socket对象</param>
            <param name="size">字符串长度</param>
            <returns>字节数据</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ReceiveVarData(System.Net.Sockets.Socket)">
            <summary>
            接收变长字符串
            为了处理粘包问题 ,每次发送数据时 包头(数据字节长度) + 正文
            这个发送小数据
            设置包头的字节为8,不能超过8位数的字节数组
            </summary>
            <param name="socket">客户端socket</param>
            <returns>byte[]数组</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ReceiveVarData``1(System.Net.Sockets.Socket)">
            <summary>
            接收T类对象,反序列化
            </summary>
            <typeparam name="T">接收T类对象,T类必须是一个可序列化类</typeparam>
            <param name="socket">客户端socket</param>
            <returns>强类型对象</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ReceiveFile(System.Net.Sockets.Socket,System.String,System.String,System.Int64,System.Action{System.Int32})">
            <summary>
            在预先得到文件的文件名和大小
            调用此方法接收文件
            </summary>
            <param name="socket">socket服务端</param>
            <param name="path">路径必须存在</param>
            <param name="filename">文件名</param>
            <param name="size">预先知道的文件大小</param>
            <param name="progress">处理过程</param>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ReceiveFile(System.Net.Sockets.Socket,System.String,System.String,System.Int64)">
            <summary>
            从socket服务端接收文件
            </summary>
            <param name="socket">socket服务端</param>
            <param name="path">文件保存路径(必须存在)</param>
            <param name="filename">文件名</param>
            <param name="size">预先知道的文件大小</param>
            <returns>处理结果</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.ReceiveFile(System.Net.Sockets.Socket,System.String)">
            <summary>
            预先不知道文件名和文件大小 用此方法接收
            此方法对于的发送方法是SendFile()
            </summary>
            <param name="socket">socket服务端</param>
            <param name="path">要保存的目录</param>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.GetPath(System.String,System.String)">
            <summary>
            得到文件路径(防止有文件名重复)
             如:aaa.txt已经在directory目录下存在,则会得到文件aaa(1).txt
            </summary>
            <param name="directory">目录名</param>
            <param name="file">文件名</param>
            <returns>文件路径</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.SendFixData(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            发送固定长度消息
            发送字节数不能大于int型最大值
            </summary>
            <param name="socket">源socket</param>
            <param name="msg">消息的字节数组</param>
            <returns>返回发送字节个数</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.SendVarData(System.Net.Sockets.Socket,System.String)">
            <summary>
            发送变长信息 格式 包头(包头占8位) + 正文
            </summary>
            <param name="socket">发送方socket对象</param>
            <param name="contact">发送文本</param>
            <returns>发送的数据内容长度</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.SendVarData(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            发送变成信息
            </summary>
            <param name="socket">发送方socket对象</param>
            <param name="bytes">消息的 字节数组</param>
            <returns>消息长度</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.SendSerializeObject``1(System.Net.Sockets.Socket,``0)">
            <summary>
            发送T类型对象,序列化
            </summary>
            <typeparam name="T">T类型</typeparam>
            <param name="socket">发送方的socket对象</param>
            <param name="obj">T类型对象,必须是可序列化的</param>
            <returns>消息长度</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.SendFile(System.Net.Sockets.Socket,System.String,System.Boolean,System.Action{System.Int32})">
            <summary>
            发送文件
            </summary>
            <param name="socket">socket对象</param>
            <param name="path">文件路径</param>
            <param name="issend">是否发送文件(头)信息,如果当前知道文件[大小,名称]则为false</param>
            <param name="progress">处理过程</param>
            <returns>处理结果</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.SendFile(System.Net.Sockets.Socket,System.String,System.Boolean)">
            <summary>
            发送文件,不需要进度信息
            </summary>
            <param name="socket">socket对象</param>
            <param name="path">文件路径</param>
            <param name="issend">是否发生(头)信息</param>
            <returns>处理结果</returns>
        </member>
        <member name="M:Masuit.Tools.Net.SocketClient.SendFile(System.Net.Sockets.Socket,System.String)">
            <summary>
            发送文件,不需要进度信息和(头)信息
            </summary>
            <param name="socket">socket对象</param>
            <param name="path">文件路径</param>
            <returns>处理结果</returns>
        </member>
        <member name="T:Masuit.Tools.Net.CacheHelper">
            <summary>
            全局统一的缓存类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.CacheHelper.GetCache``1(System.Web.Caching.Cache,System.String)">
            <summary>
            获取数据缓存
            </summary>
            <typeparam name="T">返回的类型</typeparam>
            <param name="cache"></param>
            <param name="cacheKey">键</param>
        </member>
        <member name="M:Masuit.Tools.Net.CacheHelper.SetCache(System.Web.Caching.Cache,System.String,System.Object)">
            <summary>
            设置数据缓存
            </summary>
            <param name="cache"></param>
            <param name="cacheKey">键</param>
            <param name="objObject">值</param>
        </member>
        <member name="M:Masuit.Tools.Net.CacheHelper.SetCache(System.Web.Caching.Cache,System.String,System.Object,System.TimeSpan)">
            <summary>
            设置数据缓存
            </summary>
            <param name="cache"></param>
            <param name="cacheKey">键</param>
            <param name="objObject">值</param>
            <param name="timeout">过期时间</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="cacheKey"/>"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Masuit.Tools.Net.CacheHelper.SetCache(System.Web.Caching.Cache,System.String,System.Object,System.DateTime,System.TimeSpan)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="cache"></param>
            <param name="cacheKey">键</param>
            <param name="objObject">值</param>
            <param name="absoluteExpiration">绝对过期时间</param>
            <param name="slidingExpiration">滑动过期时间</param>
        </member>
        <member name="M:Masuit.Tools.Net.CacheHelper.RemoveAllCache(System.Web.Caching.Cache,System.String)">
            <summary>
            移除指定数据缓存
            </summary>
            <param name="cache"></param>
            <param name="cacheKey">键</param>
        </member>
        <member name="M:Masuit.Tools.Net.CacheHelper.RemoveAllCache(System.Web.Caching.Cache)">
            <summary>
            移除全部缓存
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.CacheHelper.Add(System.String,System.Object)">
            <summary>
            添加缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="P:Masuit.Tools.Net.CacheHelper.Instance">
            <summary>
            缓存实例
            </summary>
        </member>
        <member name="T:Masuit.Tools.Net.CookieHelper">
            <summary>
             Cookie操作辅助类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.CookieHelper.Clear(System.String)">
            <summary>
            清除指定Cookie
            </summary>
            <param name="cookiename">cookiename</param>
        </member>
        <member name="M:Masuit.Tools.Net.CookieHelper.ClearAll">
            <summary>
            删除所有cookie值
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.CookieHelper.GetCookieValue(System.String)">
            <summary>
            获取指定Cookie值
            </summary>
            <param name="cookiename">cookiename</param>
            <returns>Cookie值</returns>
        </member>
        <member name="M:Masuit.Tools.Net.CookieHelper.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            添加一个Cookie
            </summary>
            <param name="cookiename">cookie名</param>
            <param name="cookievalue">cookie值</param>
            <param name="expires">过期时间 DateTime</param>
        </member>
        <member name="T:Masuit.Tools.Net.WebExtension">
            <summary>
            Web操作扩展
            </summary>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.GetDbContext``1">
            <summary>
            获取线程内唯一的EF上下文对象
            </summary>
            <typeparam name="T">EF上下文容器对象</typeparam>
            <returns>EF上下文容器对象</returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.Set(System.Web.HttpSessionStateBase,System.String,System.Object)">
            <summary>
            写Session
            </summary>
            <param name="session"></param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.Set(System.Web.SessionState.HttpSessionState,System.String,System.Object)">
            <summary>
            写Session
            </summary>
            <param name="session"></param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.SetByRedis``1(System.Web.SessionState.HttpSessionState,System.String,``0,System.Int32)">
            <summary>
            将Session存到Redis，需要先在config中配置链接字符串，连接字符串在config配置文件中的ConnectionStrings节下配置，name固定为RedisHosts，值的格式：127.0.0.1:6379,allowadmin=true，若未正确配置，将按默认值“127.0.0.1:6379,allowadmin=true”进行操作，如：<br/>
            &lt;connectionStrings&gt;<br/>
                 &lt;add name = "RedisHosts" connectionString="127.0.0.1:6379,allowadmin=true"/&gt;<br/>
            &lt;/connectionStrings&gt;
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key">键</param>
            <param name="obj">需要存的对象</param>
            <param name="expire">过期时间，默认20分钟</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.SetByRedis``1(System.Web.HttpSessionStateBase,System.String,``0,System.Int32)">
            <summary>
            将Session存到Redis，需要先在config中配置链接字符串，连接字符串在config配置文件中的ConnectionStrings节下配置，name固定为RedisHosts，值的格式：127.0.0.1:6379,allowadmin=true，若未正确配置，将按默认值“127.0.0.1:6379,allowadmin=true”进行操作，如：<br/>
            &lt;connectionStrings&gt;<br/>
                 &lt;add name = "RedisHosts" connectionString="127.0.0.1:6379,allowadmin=true"/&gt;<br/>
            &lt;/connectionStrings&gt;
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key">键</param>
            <param name="obj">需要存的对象</param>
            <param name="expire">过期时间，默认20分钟</param>
            <returns></returns> 
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.Get``1(System.Web.HttpSessionStateBase,System.String)">
            <summary>
            获取Session
            </summary>
            <typeparam name="T">对象</typeparam>
            <param name="session"></param>
            <param name="key">键</param>
            <returns>对象</returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.Get``1(System.Web.SessionState.HttpSessionState,System.String)">
            <summary>
            获取Session
            </summary>
            <typeparam name="T">对象</typeparam>
            <param name="session"></param>
            <param name="key">键</param>
            <returns>对象</returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.GetByRedis``1(System.Web.SessionState.HttpSessionState,System.String,System.Int32)">
            <summary>
            从Redis取Session
            </summary>
            <typeparam name="T"></typeparam>
            <param name="_"></param>
            <param name="key">键</param>
            <param name="expire">过期时间，默认20分钟</param>
            <returns></returns> 
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.GetByRedis``1(System.Web.HttpSessionStateBase,System.String,System.Int32)">
            <summary>
            从Redis取Session
            </summary>
            <typeparam name="T"></typeparam>
            <param name="_"></param>
            <param name="key">键</param>
            <param name="expire">过期时间，默认20分钟</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.RemoveByRedis(System.Web.HttpSessionStateBase,System.String)">
            <summary>
            从Redis移除对应键的Session
            </summary>
            <param name="_"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.RemoveByRedis(System.Web.SessionState.HttpSessionState,System.String)">
            <summary>
            从Redis移除对应键的Session
            </summary>
            <param name="_"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.SessionCount(System.Web.SessionState.HttpSessionState)">
            <summary>
            Session个数
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.SessionCount(System.Web.HttpSessionStateBase)">
            <summary>
            Session个数
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.GetIPAddressInfo(System.String)">
            <summary>
            根据IP地址获取详细地理信息
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.GetPhysicsAddressInfo(System.String)">
            <summary>
            根据IP地址获取详细地理信息对象
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Net.WebExtension.GetISP(System.String)">
            <summary>
            根据IP地址获取ISP
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.RandomSelector.MultipleSelector`1">
            <summary>
            多选器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.SelectorBase`1.BinarySelect(System.Collections.Generic.List{Masuit.Tools.RandomSelector.WeightedItem{`0}})">
            <summary>
            执行二进制筛选
            </summary>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.SelectorBase`1.LinearSelect(System.Collections.Generic.List{Masuit.Tools.RandomSelector.WeightedItem{`0}})">
            <summary>
            线性筛选
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="P:Masuit.Tools.RandomSelector.SelectorOption.AllowDuplicate">
            <summary>
            多选时允许重复项
            </summary>
        </member>
        <member name="P:Masuit.Tools.RandomSelector.SelectorOption.RemoveZeroWeightItems">
            <summary>
            是否移除权重0的元素
            </summary>
        </member>
        <member name="T:Masuit.Tools.RandomSelector.SingleSelector`1">
            <summary>
            单选器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Masuit.Tools.RandomSelector.WeightedItem`1.Weight">
            <summary>
            权重
            </summary>
        </member>
        <member name="F:Masuit.Tools.RandomSelector.WeightedItem`1.Value">
            <summary>
            元素
            </summary>
        </member>
        <member name="F:Masuit.Tools.RandomSelector.WeightedItem`1.CumulativeWeight">
            <summary>
            累计权重
            </summary>
        </member>
        <member name="T:Masuit.Tools.RandomSelector.WeightedSelector`1">
            <summary>
            权重筛选器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Masuit.Tools.RandomSelector.WeightedSelector`1.CumulativeWeights">
            <summary>
            累计权重集
            </summary>
        </member>
        <member name="F:Masuit.Tools.RandomSelector.WeightedSelector`1._isAddedCumulativeWeights">
            <summary>
            是否是已经添加过的权重值
            </summary>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.WeightedSelector`1.Add(Masuit.Tools.RandomSelector.WeightedItem{`0})">
            <summary>
            添加元素
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.WeightedSelector`1.Add(System.Collections.Generic.IEnumerable{Masuit.Tools.RandomSelector.WeightedItem{`0}})">
            <summary>
            批量添加元素
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.WeightedSelector`1.Add(`0,System.Int32)">
            <summary>
            添加元素
            </summary>
            <param name="item"></param>
            <param name="weight"></param>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.WeightedSelector`1.Remove(Masuit.Tools.RandomSelector.WeightedItem{`0})">
            <summary>
            移除元素
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.WeightedSelector`1.Select">
            <summary>
            执行权重筛选，取一个元素
            </summary>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.WeightedSelector`1.SelectMultiple(System.Int32)">
            <summary>
            执行权重筛选，取多个元素
            </summary>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.WeightedSelector`1.CalculateCumulativeWeights">
            <summary>
            计算累计权重
            </summary>
        </member>
        <member name="M:Masuit.Tools.RandomSelector.WeightedSelector`1.GetCumulativeWeights(System.Collections.Generic.List{Masuit.Tools.RandomSelector.WeightedItem{`0}})">
            <summary>
            计算累计权重
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Reflection.ReflectHelper">
            <summary>
            反射辅助类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectHelper.GetInstanceValue(System.Object,System.String)">
            <summary>
            获取实体相关属性的值
            </summary>
            <param name="obj">反射对象</param>
            <param name="propertyName">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectHelper.InvokeMethodOrGetProperty``1(System.Type,System.String,System.Object[],System.Object[])">
            <summary>
            直接调用内部对象的方法/函数或获取属性(支持重载调用)
            </summary>
            <typeparam name="T">泛型T</typeparam>
            <param name="refType">目标数据类型</param>
            <param name="funName">函数名称，区分大小写。</param>
            <param name="objInitial">如果调用属性，则为相关对象的初始化数据，否则为Null。</param>
            <param name="funParams">函数参数信息</param>
            <returns>运行结果</returns>
            <exception cref="T:System.InvalidProgramException">非法异常</exception>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectHelper.InvokeFunction``1(System.Type,System.String,System.Object[])">
            <summary>
            调用相关实体类型的函数方法
            </summary>
            <typeparam name="T">泛型T</typeparam>
            <param name="refType">实体类型</param>
            <param name="funName">函数名称</param>
            <param name="funParams">函数参数列表</param>
            <returns>调用该函数之后的结果</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectHelper.LoadBitmap(System.Type,System.String,System.String)">
            <summary>
            获取程序集资源的位图资源
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="resourceHolder">资源的根名称。例如，名为“MyResource.en-US.resources”的资源文件的根名称为“MyResource”。</param>
            <param name="imageName">资源项名称</param>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectHelper.GetStringRes(System.Type,System.String,System.String)">
            <summary>
             获取程序集资源的文本资源
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="resName">资源项名称</param>
            <param name="resourceHolder">资源的根名称。例如，名为“MyResource.en-US.resources”的资源文件的根名称为“MyResource”。</param>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectHelper.GetManifestString(System.Type,System.String,System.String)">
            <summary>
            获取程序集嵌入资源的文本形式
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="charset">字符集编码</param>
            <param name="resName">嵌入资源相对路径</param>
            <returns>如没找到该资源则返回空字符</returns>
        </member>
        <member name="T:Masuit.Tools.Reflection.ReflectionUtil">
            <summary>
            反射操作辅助类，如获取或设置字段、属性的值等反射信息。
            </summary>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.InvokeMethod``1(System.Object,System.String,System.Object[])">
            <summary>
            执行方法
            </summary>
            <param name="obj">反射对象</param>
            <param name="methodName">方法名，区分大小写</param>
            <param name="args">方法参数</param>
            <typeparam name="T">约束返回的T必须是引用类型</typeparam>
            <returns>T类型</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            执行方法
            </summary>
            <param name="obj">反射对象</param>
            <param name="methodName">方法名，区分大小写</param>
            <param name="args">方法参数</param>
            <typeparam name="T">约束返回的T必须是引用类型</typeparam>
            <returns>T类型</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.SetField``1(``0,System.String,System.Object)">
            <summary>
            设置字段
            </summary>
            <param name="obj">反射对象</param>
            <param name="name">字段名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetField``1(System.Object,System.String)">
            <summary>
            获取字段
            </summary>
            <param name="obj">反射对象</param>
            <param name="name">字段名</param>
            <typeparam name="T">约束返回的T必须是引用类型</typeparam>
            <returns>T类型</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetFields(System.Object)">
            <summary>
            获取所有的字段信息
            </summary>
            <param name="obj">反射对象</param>
            <returns>字段信息</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.SetProperty``1(``0,System.String,System.Object)">
            <summary>
            设置属性
            </summary>
            <param name="obj">反射对象</param>
            <param name="name">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetProperty``1(System.Object,System.String)">
            <summary>
            获取属性
            </summary>
            <param name="obj">反射对象</param>
            <param name="name">属性名</param>
            <typeparam name="T">约束返回的T必须是引用类型</typeparam>
            <returns>T类型</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetProperties(System.Object)">
            <summary>
            获取所有的属性信息
            </summary>
            <param name="obj">反射对象</param>
            <returns>属性信息</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetDescription(System.Enum)">
            <summary>
            获取枚举成员的Description信息
            </summary>
            <param name="value">枚举值</param>
            <returns>返回枚举的Description或ToString</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetDescription(System.Enum,System.Object[])">
            <summary>
            获取枚举值的Description信息
            </summary>
            <param name ="value">枚举值</param>
            <param name ="args">要格式化的对象</param>
            <returns>如果未找到DescriptionAttribute则返回null或返回类型描述</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetDescription(System.Reflection.MemberInfo)">
            <summary>
            根据成员信息获取Description信息
            </summary>
            <param name="member">成员信息</param>
            <returns>如果未找到DescriptionAttribute则返回null或返回类型描述</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetDescription(System.Reflection.MemberInfo,System.Object[])">
            <summary>
            根据成员信息获取Description信息
            </summary>
            <param name="member">成员信息</param>
            <param name="args">格式化占位对象</param>
            <returns>如果未找到DescriptionAttribute则返回null或返回类型描述</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            获取对象的Attribute
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetImageResource(System.Reflection.Assembly,System.String)">
            <summary>
            根据资源名称获取图片资源流
            </summary>
            <param name="_"></param>
            <param name="resourceName">资源的名称</param>
            <returns>数据流</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.LoadBitmap(System.Type,System.String,System.String)">
            <summary>
            获取程序集资源的位图资源
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="resourceHolder">资源的根名称。例如，名为“MyResource.en-US.resources”的资源文件的根名称为“MyResource”。</param>
            <param name="imageName">资源项名称</param>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetStringRes(System.Type,System.String,System.String)">
            <summary>
             获取程序集资源的文本资源
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="resName">资源项名称</param>
            <param name="resourceHolder">资源的根名称。例如，名为“MyResource.en-US.resources”的资源文件的根名称为“MyResource”。</param>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetManifestString(System.Type,System.String,System.String)">
            <summary>
            获取程序集嵌入资源的文本形式
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="charset">字符集编码</param>
            <param name="resName">嵌入资源相对路径</param>
            <returns>如没找到该资源则返回空字符</returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance(System.Type)">
            <summary>
            获取默认实例
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance``1(System.Type)">
            <summary>
            获取默认实例
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance``1(System.String)">
            <summary>
            获取默认实例
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance(System.String)">
            <summary>
            获取默认实例
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance``2(System.Type,``0)">
            <summary>
            获取一个构造参数的实例
            </summary>
            <typeparam name="TArg">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance``2(System.String,``0)">
            <summary>
            获取一个构造参数的实例
            </summary>
            <typeparam name="TArg">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance``3(System.Type,``0,``1)">
            <summary>
            获取2个构造参数的实例
            </summary>
            <typeparam name="TArg1">参数类型</typeparam>
            <typeparam name="TArg2">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument1">参数值</param>
            <param name="argument2">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance``3(System.String,``0,``1)">
            <summary>
            获取2个构造参数的实例
            </summary>
            <typeparam name="TArg1">参数类型</typeparam>
            <typeparam name="TArg2">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument1">参数值</param>
            <param name="argument2">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance``4(System.Type,``0,``1,``2)">
            <summary>
            获取3个构造参数的实例
            </summary>
            <typeparam name="TArg1">参数类型</typeparam>
            <typeparam name="TArg2">参数类型</typeparam>
            <typeparam name="TArg3">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument1">参数值</param>
            <param name="argument2">参数值</param>
            <param name="argument3">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Reflection.ReflectionUtil.GetInstance``4(System.String,``0,``1,``2)">
            <summary>
            获取3个构造参数的实例
            </summary>
            <typeparam name="TArg1">参数类型</typeparam>
            <typeparam name="TArg2">参数类型</typeparam>
            <typeparam name="TArg3">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument1">参数值</param>
            <param name="argument2">参数值</param>
            <param name="argument3">参数值</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Security.Crc32">
            <summary>
            实现一个32位CRC哈希算法(兼容Zip)
            </summary>
            <remarks>
            Crc32仅应用于与旧文件格式和算法向后兼容。 对于新的应用程序，它不够安全。 如果需要多次调用同一数据，请使用HashAlgorithm接口
            </remarks>
        </member>
        <member name="T:Masuit.Tools.Security.Crc64">
            <summary>
            64-bit CRC 实现
            </summary>
            <remarks>
            支持ISO 3309标准
            </remarks>
        </member>
        <member name="T:Masuit.Tools.Security.Encrypt">
            <summary>
            常用的加密解密算法
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.Encrypt.DefaultEncryptKey">
            <summary>
            加密密钥，默认取“masuit”的MD5值
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.DesEncrypt(System.String)">
            <summary>
            使用默认加密
            </summary>
            <param name="strText">被加密的字符串</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.DesDecrypt(System.String)">
            <summary>
            使用默认解密
            </summary>
            <param name="strText">需要解密的 字符串</param>
            <returns>解密后的数据</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.DesEncrypt(System.String,System.String)">
            <summary> 
            加密字符串
            加密密钥必须为8位
            </summary> 
            <param name="strText">被加密的字符串</param> 
            <param name="strEncrKey">8位长度密钥</param> 
            <returns>加密后的数据</returns> 
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.DesEncrypt(System.IO.FileStream,System.String,System.String)">
            <summary>
            DES加密文件
            </summary>
            <param name="fin">文件输入流</param>
            <param name="outFilePath">文件输出路径</param>
            <param name="strEncrKey">加密密钥</param>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.DesDecrypt(System.IO.FileStream,System.String,System.String)">
            <summary>
            DES解密文件
            </summary>
            <param name="fin">输入文件流</param>
            <param name="outFilePath">文件输出路径</param>
            <param name="sDecrKey">解密密钥</param>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.DesDecrypt(System.String,System.String)">
            <summary>
                DES解密算法
                密钥为8位
            </summary>
            <param name="pToDecrypt">需要解密的字符串</param>
            <param name="sKey">密钥</param>
            <returns>解密后的数据</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.AESEncrypt(System.String)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.AESEncrypt(System.String,System.String)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <param name="encryptKey">加密密钥，须半角字符</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.AESDecrypt(System.String)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.AESDecrypt(System.String,System.String)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返回空</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="startIndex">索引位置，以0开始</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.AESEncryptStrream(System.IO.FileStream,System.String)">
            <summary>
            加密文件流
            </summary>
            <param name="fs">需要加密的文件流</param>
            <param name="decryptKey">加密密钥</param>
            <returns>加密流</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.AESDecryptStream(System.IO.FileStream,System.String)">
            <summary>
            解密文件流
            </summary>
            <param name="fs">需要解密的文件流</param>
            <param name="decryptKey">解密密钥</param>
            <returns>加密流</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.AESEncryptFile(System.IO.FileStream,System.String)">
            <summary>
            对指定文件AES加密
            </summary>
            <param name="input">源文件流</param>
            <param name="outputPath">输出文件路径</param>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.AESDecryptFile(System.IO.FileStream,System.String)">
            <summary>
            对指定的文件AES解密
            </summary>
            <param name="input">源文件流</param>
            <param name="outputPath">输出文件路径</param>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.Base64Encrypt(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="str">需要加密的字符串</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.Base64Decrypt(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="str">需要解密的字符串</param>
            <returns>解密后的数据</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.SHA256(System.String)">
            <summary>
            SHA256函数
            </summary>
            <param name="str">原始字符串</param>
            <returns>SHA256结果(返回长度为44字节的字符串)</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.MDString(System.String)">
            <summary>
                对字符串进行MD5加密
            </summary>
            <param name="message">需要加密的字符串</param>
            <returns>加密后的结果</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.MDString2(System.String)">
            <summary>
                对字符串进行MD5二次加密
            </summary>
            <param name="message">需要加密的字符串</param>
            <returns>加密后的结果</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.MDString3(System.String)">
            <summary>
            MD5 三次加密算法
            </summary>
            <param name="s">需要加密的字符串</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.MDString(System.String,System.String)">
            <summary>
                对字符串进行MD5加盐加密
            </summary>
            <param name="message">需要加密的字符串</param>
            <param name="salt">盐</param>
            <returns>加密后的结果</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.MDString2(System.String,System.String)">
            <summary>
                对字符串进行MD5二次加盐加密
            </summary>
            <param name="message">需要加密的字符串</param>
            <param name="salt">盐</param>
            <returns>加密后的结果</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.MDString3(System.String,System.String)">
            <summary>
            MD5 三次加密算法
            </summary>
            <param name="s">需要加密的字符串</param>
            <param name="salt">盐</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.MDFile(System.String)">
            <summary>
            获取文件的MD5值
            </summary>
            <param name="fileName">需要求MD5值的文件的文件名及路径</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Encrypt.MDString(System.IO.Stream)">
            <summary>
            获取数据流的MD5值
            </summary>
            <param name="stream"></param>
            <returns>MD5字符串</returns>
        </member>
        <member name="T:Masuit.Tools.Security.RC2">
            <summary>
                RC2加密解密算法
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.EncryptToFile(System.String,System.String,System.Int32)">
            <summary>
                将文本数据加密后写入一个文件，其中，这个文件是用InitBinFile建立的，这个文件将被分成十块，
                用来分别保存10组不同的数据，第一个byte位保留，第2位到第21位分别用来存放每块数据的长度，但
                一个byte的取值为0-127，所以，用两个byte来存放一个长度。
            </summary>
            <param name="toEncryptText">要加密的文本数据</param>
            <param name="filePath">要写入的文件</param>
            <param name="dataIndex">写入第几块，取值为1--10</param>
            <returns>是否操作成功</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.DecryptFromFile(System.String,System.Int32)">
            <summary>
                从一个文件中解密出一段文本，其中，这个文件是由InitBinFile建立的，并且由 EncryptToFile加密的
            </summary>
            <param name="filePath">要解密的文件</param>
            <param name="dataIndex">要从哪一个块中解密</param>
            <returns>解密后的文本</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.EncryptToFile(System.String,System.String)">
            <summary>
                将一段文本加密后保存到一个文件
            </summary>
            <param name="toEncryptText">要加密的文本数据</param>
            <param name="filePath">要保存的文件</param>
            <returns>是否加密成功</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.DecryptFromFile(System.String)">
            <summary>
                将一个被加密的文件解密
            </summary>
            <param name="filePath">要解密的文件</param>
            <returns>解密后的文本</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.EncryptToFile(System.String,System.String,System.Int32,System.Byte[],System.Byte[])">
            <summary>
                将文本数据加密后写入一个文件，其中，这个文件是用InitBinFile建立的，这个文件将被分成十块，
                用来分别保存10组不同的数据，第一个byte位保留，第2位到第21位分别用来存放每块数据的长度，但
                一个byte的取值为0-127，所以，用两个byte来存放一个长度。
            </summary>
            <param name="toEncryptText">要加密的文本数据</param>
            <param name="filePath">要写入的文件</param>
            <param name="dataIndex">写入第几块，取值为1--10</param>
            <param name="IV">初始化向量</param>
            <param name="Key">加密密匙</param>
            <returns>是否操作成功</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.DecryptFromFile(System.String,System.Int32,System.Byte[],System.Byte[])">
            <summary>
                从一个文件中解密出一段文本，其中，这个文件是由InitBinFile建立的，并且由 EncryptToFile加密的
            </summary>
            <param name="filePath">要解密的文件</param>
            <param name="dataIndex">要从哪一个块中解密</param>
            <param name="iv">初始化向量</param>
            <param name="key">解密密匙</param>
            <returns>解密后的文本</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.EncryptToFile(System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
                将一段文本加密后保存到一个文件
            </summary>
            <param name="toEncryptText">要加密的文本数据</param>
            <param name="filePath">要保存的文件</param>
            <param name="iv">初始化向量</param>
            <param name="key">加密密匙</param>
            <returns>是否加密成功</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.DecryptFromFile(System.String,System.Byte[],System.Byte[])">
            <summary>
                将一个被加密的文件解密
            </summary>
            <param name="filePath">要解密的文件</param>
            <param name="iv">初始化向量</param>
            <param name="key">解密密匙</param>
            <returns>解密后的文本</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.SetIV(System.String)">
            <summary>
                设置加密或解密的初始化向量
            </summary>
            <param name="s">长度等于8的ASCII字符集的字符串</param>
        </member>
        <member name="M:Masuit.Tools.Security.RC2.SetKey(System.String)">
            <summary>
                设置加密或解密的密匙
            </summary>
            <param name="s">长度等于16的ASCII字符集的字符串</param>
        </member>
        <member name="T:Masuit.Tools.Security.Rijndael">
            <summary>
                对称加密解密算法类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.Rijndael.SymmetricMethod">
            <summary>
                对称加密类的构造函数
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.Rijndael.GetLegalKey">
            <summary>
                获得密钥
            </summary>
            <returns>密钥</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Rijndael.GetLegalIV">
            <summary>
                获得初始向量IV
            </summary>
            <returns>初试向量IV</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Rijndael.Encrypto(System.String)">
            <summary>
                加密方法
            </summary>
            <param name="source">待加密的串</param>
            <returns>经过加密的串</returns>
        </member>
        <member name="M:Masuit.Tools.Security.Rijndael.Decrypto(System.String)">
            <summary>
                解密方法
            </summary>
            <param name="source">待解密的串</param>
            <returns>经过解密的串</returns>
        </member>
        <member name="T:Masuit.Tools.Security.HashEncode">
            <summary>
            得到随机安全码（哈希加密）。
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.HashEncode.GetSecurity(System.Random)">
            <summary>
            得到随机哈希加密字符串
            </summary>
            <returns>随机哈希加密字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Security.HashEncode.HashEncoding(System.String)">
            <summary>
            哈希加密一个字符串
            </summary>
            <param name="security">需要加密的字符串</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="T:Masuit.Tools.Security.RSA">
            <summary>
            RSA操作类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.ToXML(System.Boolean)">
            <summary>
            导出XML格式密钥对，如果convertToPublic含私钥的RSA将只返回公钥，仅含公钥的RSA不受影响
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.ToPEM_PKCS1(System.Boolean)">
            <summary>
            导出PEM PKCS#1格式密钥对，如果convertToPublic含私钥的RSA将只返回公钥，仅含公钥的RSA不受影响
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.ToPEM_PKCS8(System.Boolean)">
            <summary>
            导出PEM PKCS#8格式密钥对，如果convertToPublic含私钥的RSA将只返回公钥，仅含公钥的RSA不受影响
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.ToPEM(System.Boolean)">
            <summary>
            将密钥对导出成PEM对象，如果convertToPublic含私钥的RSA将只返回公钥，仅含公钥的RSA不受影响
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.Encrypt(System.String)">
            <summary>
            加密字符串（utf-8），出错抛异常
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.Encrypt(System.Byte[])">
            <summary>
            加密数据，出错抛异常
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.DecryptOrNull(System.String)">
            <summary>
            解密字符串（utf-8），解密异常返回null
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.DecryptOrNull(System.Byte[])">
            <summary>
            解密数据，解密异常返回null
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.Sign(System.String,System.String)">
            <summary>
            对str进行签名，并指定hash算法（如：SHA256）
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.Sign(System.String,System.Byte[])">
            <summary>
            对data进行签名，并指定hash算法（如：SHA256）
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.Verify(System.String,System.String,System.String)">
            <summary>
            验证字符串str的签名是否是sgin，并指定hash算法（如：SHA256）
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.Verify(System.String,System.Byte[],System.Byte[])">
            <summary>
            验证data的签名是否是sgin，并指定hash算法（如：SHA256）
            </summary>
        </member>
        <member name="P:Masuit.Tools.Security.RSA.RSAObject">
            <summary>
            最底层的RSACryptoServiceProvider对象
            </summary>
        </member>
        <member name="P:Masuit.Tools.Security.RSA.KeySize">
            <summary>
            密钥位数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Security.RSA.HasPrivate">
            <summary>
            是否包含私钥
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.#ctor(System.Int32)">
            <summary>
            用指定密钥大小创建一个新的RSA，出错抛异常
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.#ctor(System.String)">
            <summary>
            通过公钥或私钥创建RSA，出错抛异常
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RSA.#ctor(Masuit.Tools.Security.RsaPem)">
            <summary>
            通过一个pem对象创建RSA，pem为公钥或私钥，出错抛异常
            </summary>
        </member>
        <member name="T:Masuit.Tools.Security.RsaCrypt">
            <summary>
            RSA加密解密及RSA签名和验证
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.GenerateRsaKeys(Masuit.Tools.Security.RsaKeyType,System.Int32)">
            <summary>
            生成 RSA 公钥和私钥
            </summary>
            <param name="type">密钥类型</param>
            <param name="length">密钥长度</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.RSAEncrypt(System.String,System.String)">
            <summary>
            RSA的加密函数 string
            </summary>
            <param name="publicKey">公钥</param>
            <param name="mStrEncryptString">需要加密的字符串</param>
            <returns>加密后的内容</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.RSAEncrypt(System.String)">
            <summary>
            RSA的加密函数 string
            </summary>
            <param name="mStrEncryptString">需要加密的字符串</param>
            <returns>加密后的内容</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.RSAEncrypt(System.Byte[],System.String)">
            <summary>
            RSA的加密函数 byte[]
            </summary>
            <param name="encryptString">需要加密的字节数组</param>
            <param name="publicKey">公钥</param>
            <returns>加密后的内容</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.RSAEncrypt(System.Byte[])">
            <summary>
            RSA的加密函数 byte[]
            </summary>
            <param name="encryptString">需要加密的字节数组</param>
            <returns>加密后的内容</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.RSADecrypt(System.String,System.String)">
            <summary>
            RSA的解密函数  string
            </summary>
            <param name="mStrDecryptString">需要解密的字符串</param>
            <param name="privateKey">私钥</param>
            <returns>解密后的内容</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.RSADecrypt(System.String)">
            <summary>
            RSA的解密函数  string
            </summary>
            <param name="mStrDecryptString">需要解密的字符串</param>
            <returns>解密后的内容</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.RSADecrypt(System.Byte[],System.String)">
            <summary>
            RSA的解密函数  byte
            </summary>
            <param name="decryptString">需要解密的字符串</param>
            <param name="privateKey">私钥</param>
            <returns>解密后的内容</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.RSADecrypt(System.Byte[])">
            <summary>
            RSA的解密函数  byte
            </summary>
            <param name="decryptString">需要解密的字符串</param>
            <returns>解密后的内容</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.GetHashBytes(System.String)">
            <summary>
            获取Hash描述表
            </summary>
            <param name="mStrSource">源数据</param>
            <returns>Hash描述表</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.GetHashString(System.String)">
            <summary>
            获取Hash描述表
            </summary>
            <param name="mStrSource">源数据</param>
            <returns>Hash描述表</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.GetHashBytes(System.IO.FileStream)">
            <summary>
            从文件流获取Hash描述表
            </summary>
            <param name="objFile">源文件</param>
            <returns>Hash描述表</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.GetHashString(System.IO.FileStream)">
            <summary>
            从文件流获取Hash描述表
            </summary>
            <param name="objFile">源文件</param>
            <returns>Hash描述表</returns>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.SignatureBytes(System.Byte[],System.String)">
            <summary>
            RSA签名
            </summary>
            <param name="hashbyteSignature">签名字节数据</param>
            <param name="privateKey">私钥</param>
            <returns>处理结果</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
            <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The key is null.-or- The hash algorithm is null. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.SignatureString(System.Byte[],System.String)">
            <summary>
            RSA签名
            </summary>
            <param name="hashbyteSignature">签名字节数据</param>
            <param name="privateKey">私钥</param>
            <returns>处理结果</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
            <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The key is null.-or- The hash algorithm is null. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.SignatureBytes(System.String,System.String)">
            <summary>
            RSA签名
            </summary>
            <param name="mStrHashbyteSignature">签名字符串数据</param>
            <param name="pStrKeyPrivate">私钥</param>
            <returns>处理结果</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
            <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The key is null.-or- The hash algorithm is null. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.SignatureString(System.String,System.String)">
            <summary>
            RSA签名
            </summary>
            <param name="mStrHashbyteSignature">签名字符串数据</param>
            <param name="pStrKeyPrivate">私钥</param>
            <returns>处理结果</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
            <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The key is null.-or- The hash algorithm is null. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.SignatureDeformatter(System.Byte[],System.String,System.Byte[])">
            <summary>
            RSA 签名验证
            </summary>
            <param name="deformatterData">反格式化字节数据</param>
            <param name="publicKey">公钥</param>
            <param name="hashbyteDeformatter">哈希字节数据</param>
            <returns>处理结果</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
            <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The key is null.-or- The hash algorithm is null. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.SignatureDeformatter(System.Byte[],System.String,System.String)">
            <summary>
            RSA 签名验证
            </summary>
            <param name="deformatterData">反格式化字节数据</param>
            <param name="publicKey">公钥</param>
            <param name="pStrHashbyteDeformatter">哈希字符串数据</param>
            <returns>处理结果</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
            <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The key is null.-or- The hash algorithm is null. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.SignatureDeformatter(System.String,System.String,System.Byte[])">
            <summary>
            RSA 签名验证
            </summary>
            <param name="pStrDeformatterData">反格式化字符串数据</param>
            <param name="publicKey">公钥</param>
            <param name="hashbyteDeformatter">哈希字节数据</param>
            <returns>处理结果</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
            <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The key is null.-or- The hash algorithm is null. </exception>
        </member>
        <member name="M:Masuit.Tools.Security.RsaCrypt.SignatureDeformatter(System.String,System.String,System.String)">
            <summary>
            RSA 签名验证
            </summary>
            <param name="pStrDeformatterData">格式字符串数据</param>
            <param name="publicKey">公钥</param>
            <param name="pStrHashbyteDeformatter">哈希字符串数据</param>
            <returns>处理结果</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cryptographic service provider (CSP) cannot be acquired. </exception>
            <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The key is null.-or- The hash algorithm is null. </exception>
        </member>
        <member name="T:Masuit.Tools.Security.RsaKey">
            <summary>
            RSA密钥对
            </summary>
        </member>
        <member name="P:Masuit.Tools.Security.RsaKey.PublicKey">
            <summary>
            公钥
            </summary>
        </member>
        <member name="P:Masuit.Tools.Security.RsaKey.PrivateKey">
            <summary>
            私钥
            </summary>
        </member>
        <member name="T:Masuit.Tools.Security.RsaPem">
            <summary>
            RSA PEM格式密钥对的解析和导出
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.RsaPem.KeyModulus">
            <summary>
            modulus 模数n，公钥、私钥都有
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.RsaPem.KeyExponent">
            <summary>
            publicExponent 公钥指数e，公钥、私钥都有
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.RsaPem.KeyD">
            <summary>
            privateExponent 私钥指数d，只有私钥的时候才有
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.RsaPem.ValP">
            <summary>
            prime1
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.RsaPem.ValQ">
            <summary>
            prime2
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.RsaPem.ValDp">
            <summary>
            exponent1
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.RsaPem.ValDq">
            <summary>
            exponent2
            </summary>
        </member>
        <member name="F:Masuit.Tools.Security.RsaPem.ValInverseQ">
            <summary>
            coefficient
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.#ctor(System.Security.Cryptography.RSACryptoServiceProvider,System.Boolean)">
            <summary>
            通过RSA中的公钥和私钥构造一个PEM，如果convertToPublic含私钥的RSA将只读取公钥，仅含公钥的RSA不受影响
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.#ctor(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            通过全量的PEM字段数据构造一个PEM，除了模数modulus和公钥指数exponent必须提供外，其他私钥指数信息要么全部提供，要么全部不提供（导出的PEM就只包含公钥）
            注意：所有参数首字节如果是0，必须先去掉
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.#ctor(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            通过公钥指数和私钥指数构造一个PEM，会反推计算出P、Q但和原始生成密钥的P、Q极小可能相同
            注意：所有参数首字节如果是0，必须先去掉
            出错将会抛出异常
            </summary>
            <param name="modulus">必须提供模数</param>
            <param name="exponent">必须提供公钥指数</param>
            <param name="dOrNull">私钥指数可以不提供，导出的PEM就只包含公钥</param>
        </member>
        <member name="P:Masuit.Tools.Security.RsaPem.KeySize">
            <summary>
            密钥位数
            </summary>
        </member>
        <member name="P:Masuit.Tools.Security.RsaPem.HasPrivate">
            <summary>
            是否包含私钥
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.GetRSA">
            <summary>
            将PEM中的公钥私钥转成RSA对象，如果未提供私钥，RSA中就只包含公钥
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.BigX(System.Byte[])">
            <summary>
            转成正整数，如果是负数，需要加前导0转成正整数
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.BigB(System.Numerics.BigInteger)">
            <summary>
            BigInt导出byte整数首字节>0x7F的会加0前导，保证正整数，因此需要去掉0
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.FindFactor(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
            <summary>
            由n e d 反推 P Q 
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.FromPEM(System.String)">
            <summary>
            用PEM格式密钥对创建RSA，支持PKCS#1、PKCS#8格式的PEM
            出错将会抛出异常
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.ToPEM(System.Boolean,System.Boolean)">
            <summary>
            将RSA中的密钥对转换成PEM格式，usePKCS8=false时返回PKCS#1格式，否则返回PKCS#8格式，如果convertToPublic含私钥的RSA将只返回公钥，仅含公钥的RSA不受影响
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.FromXML(System.String)">
            <summary>
            将XML格式密钥转成PEM，支持公钥xml、私钥xml
            出错将会抛出异常
            </summary>
        </member>
        <member name="M:Masuit.Tools.Security.RsaPem.ToXML(System.Boolean)">
            <summary>
            将RSA中的密钥对转换成XML格式
            ，如果convertToPublic含私钥的RSA将只返回公钥，仅含公钥的RSA不受影响
            </summary>
        </member>
        <member name="T:Masuit.Tools.Core.ChineseString">
            <summary>
            中文字符工具类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Core.ChineseString.ToSimplified(System.String)">
            <summary>
            转为简体
            </summary>
            <param name="text">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Core.ChineseString.ToTraditional(System.String)">
            <summary>
            转为繁体
            </summary>
            <param name="text">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Core.ChineseString.ConvertCore(System.String,Masuit.Tools.Core.ChineseString.EnumChinese)">
            <summary>
            中文转换核心代码
            </summary>
            <param name="text">源字符串</param>
            <param name="format">目标转换输出格式</param>
            <returns></returns>
        </member>
        <member name="F:Masuit.Tools.Core.ChineseString.Simplified">
            <summary>
            简体字
            </summary>
        </member>
        <member name="F:Masuit.Tools.Core.ChineseString.Traditional">
            <summary>
            繁体字
            </summary>
        </member>
        <member name="T:Masuit.Tools.Core.ChineseString.EnumChinese">
            <summary>
            中文格式枚举
            </summary>
        </member>
        <member name="T:Masuit.Tools.Core.Validator.ComplexPassword">
            <summary>
            强密码验证
            </summary>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.ComplexPassword.IsValid(System.Object)">
            <summary>
            校验密码强度
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Core.Validator.IsEmailAttribute">
            <summary>
            邮箱校验
            </summary>
        </member>
        <member name="P:Masuit.Tools.Core.Validator.IsEmailAttribute.WhiteList">
            <summary>
            域白名单
            </summary>
        </member>
        <member name="P:Masuit.Tools.Core.Validator.IsEmailAttribute.BlockList">
            <summary>
            域黑名单
            </summary>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.IsEmailAttribute.#ctor(System.Boolean)">
            <summary>
            可在配置文件AppSetting节中添加EmailDomainWhiteList配置邮箱域名白名单，EmailDomainBlockList配置邮箱域名黑名单，逗号分隔，每个单独的元素支持正则表达式
            </summary>
            <param name="valid">是否检查邮箱的有效性</param>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.IsEmailAttribute.IsValid(System.Object)">
            <summary>
            邮箱校验
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Core.Validator.IsIPAddressAttribute">
            <summary>
            验证IPv4地址是否合法
            </summary>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.IsIPAddressAttribute.IsValid(System.Object)">
            <summary>
            验证IPv4地址是否合法
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Core.Validator.IsPhoneAttribute">
            <summary>
            验证手机号码是否合法
            </summary>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.IsPhoneAttribute.IsValid(System.Object)">
            <summary>
            验证手机号码是否合法
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Core.Validator.MaxValueAttribute">
            <summary>
            最大值校验
            </summary>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.MaxValueAttribute.#ctor(System.Double)">
            <summary>
            最大值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.MaxValueAttribute.IsValid(System.Object)">
            <summary>
            最大值校验
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.MaxValueAttribute.FormatErrorMessage(System.String)">
            <summary>Applies formatting to an error message, based on the data field where the error occurred.</summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>An instance of the formatted error message.</returns>
        </member>
        <member name="T:Masuit.Tools.Core.Validator.MinValueAttribute">
            <summary>
            最小值校验
            </summary>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.MinValueAttribute.#ctor(System.Double)">
            <summary>
            最小值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.MinValueAttribute.IsValid(System.Object)">
            <summary>
            最小值校验
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Core.Validator.MinValueAttribute.FormatErrorMessage(System.String)">
            <summary>Applies formatting to an error message, based on the data field where the error occurred.</summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>An instance of the formatted error message.</returns>
        </member>
        <member name="T:Masuit.Tools.Strings.NumberFormater">
            <summary>
            数制格式化器
            </summary>
        </member>
        <member name="P:Masuit.Tools.Strings.NumberFormater.Characters">
            <summary>
            数制表示字符集
            </summary>
        </member>
        <member name="P:Masuit.Tools.Strings.NumberFormater.Length">
            <summary>
            进制长度
            </summary>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.#ctor">
            <summary>
            数制格式化器
            </summary>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.#ctor(System.String)">
            <summary>
            数制格式化器
            </summary>
            <param name="characters">进制转换</param>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.#ctor(System.Int32)">
            <summary>
            数制格式化器
            </summary>
            <param name="bin">进制</param>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.ToString(System.Int64)">
            <summary>
            数字转换为指定的进制形式字符串
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.ToString(System.Numerics.BigInteger)">
            <summary>
            数字转换为指定的进制形式字符串
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.FromString(System.String)">
            <summary>
            指定字符串转换为指定进制的数字形式
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.FromStringBig(System.String)">
            <summary>
            指定字符串转换为指定进制的大数形式
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.ToChineseNumber(System.Double)">
            <summary>
            转换为中文数字格式
            </summary>
            <param name="num">123.45</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Strings.NumberFormater.ToChineseMoney(System.Double)">
            <summary>
            数字转中文金额大写
            </summary>
            <param name="number">22.22</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Strings.Template">
            <summary>
            模版引擎
            </summary>
        </member>
        <member name="M:Masuit.Tools.Strings.Template.#ctor(System.String)">
            <summary>
            模版引擎
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Masuit.Tools.Strings.Template.Create(System.String)">
            <summary>
            创建模板
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Strings.Template.Set(System.String,System.String)">
            <summary>
            设置变量
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Strings.Template.Render(System.Boolean)">
            <summary>
            渲染模板
            </summary>
            <param name="check">是否检查未使用的模板变量</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Strings.ValidateCode">
            <summary>
            画验证码
            </summary>
        </member>
        <member name="M:Masuit.Tools.Strings.ValidateCode.CreateValidateCode(System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="length">指定验证码的长度</param>
            <returns>验证码字符串</returns>
        </member>
        <member name="M:Masuit.Tools.Strings.ValidateCode.CreateValidateGraphic(System.Web.HttpContext,System.String,System.Int32,System.Int32)">
            <summary>
            创建验证码的图片
            </summary>
            <param name="validateCode">验证码序列</param>
            <param name="context">当前的HttpContext上下文对象</param>
            <param name="fontSize">字体大小，默认值22px</param>
            <param name="lineHeight">行高，默认36px</param>
            <exception cref="T:System.Exception">The operation failed.</exception>
        </member>
        <member name="T:Masuit.Tools.Systems.ConcurrentLimitedQueue`1">
            <summary>
            定长队列
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Masuit.Tools.Systems.ConcurrentLimitedQueue`1.Limit">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.ConcurrentLimitedQueue`1.#ctor(System.Int32)">
            <summary>
            定长队列
            </summary>
            <param name="limit"></param>
        </member>
        <member name="M:Masuit.Tools.Systems.ConcurrentLimitedQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            定长队列
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Masuit.Tools.Systems.ConcurrentLimitedQueue`1.Enqueue(`0)">
            <summary>
            入队
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:Masuit.Tools.Systems.Disposable">
            <summary>
            Disposable
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.Disposable.Finalize">
            <summary>
            终结器
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.Disposable.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.Disposable.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Masuit.Tools.Systems.EnumExt">
            <summary>
            枚举扩展类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.GetDictionary(System.Type)">
            <summary>
            获取枚举对象Key与显示名称的字典
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.GetValueItems(System.Type)">
            <summary>
            获取枚举对象显示名称与Key的字典
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.GetValue(System.Type,System.String)">
            <summary>
            获取枚举对象的值内容
            </summary>
            <param name="enumType"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.GetEnumType(System.Reflection.Assembly,System.String)">
            <summary>
            获取枚举类型
            </summary>
            <param name="assembly"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.GetDisplay(System.Enum)">
            <summary>
            根据枚举成员获取Display的属性Name
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.GetDescriptionAndValue(System.Type)">
            <summary>
            根据枚举成员获取自定义属性EnumDisplayNameAttribute的属性DisplayName
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.GetDescription(System.Enum)">
            <summary>
            根据枚举成员获取DescriptionAttribute的属性Description
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.ToEnumString(System.Int32,System.Type)">
            <summary>
            扩展方法：根据枚举值得到相应的枚举定义字符串
            </summary>
            <param name="value"></param>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.EnumExt.GetEnumStringFromEnumValue(System.Type)">
            <summary>
            根据枚举类型得到其所有的 值 与 枚举定义字符串 的集合
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Systems.HiPerfTimer">
            <summary>
            纳秒级计时器
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.HiPerfTimer.#ctor">
            <summary>
            纳秒计数器
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.HiPerfTimer.Start">
            <summary>
            开始计时器
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.HiPerfTimer.StartNew">
            <summary>
            启动一个新的计时器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.HiPerfTimer.Stop">
            <summary>
            停止计时器
            </summary>
        </member>
        <member name="P:Masuit.Tools.Systems.HiPerfTimer.Duration">
            <summary>
            时器经过时间(单位：秒)
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.HiPerfTimer.Execute(System.Action)">
            <summary>
            执行一个方法并测试执行时间
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Systems.LimitedQueue`1">
            <summary>
            定长队列
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Masuit.Tools.Systems.LimitedQueue`1.Limit">
            <summary>
            队列长度
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.LimitedQueue`1.#ctor(System.Int32)">
            <summary>
            定长队列
            </summary>
            <param name="limit"></param>
        </member>
        <member name="M:Masuit.Tools.Systems.LimitedQueue`1.Enqueue(`0)">
            <summary>
            入队
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:Masuit.Tools.Systems.SnowFlake">
            <summary>
            动态生产有规律的分布式ID
            </summary>
        </member>
        <member name="P:Masuit.Tools.Systems.SnowFlake.NewId">
            <summary>
            获取一个新的id
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.SnowFlake.GetInstance">
            <summary>
            创建一个实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.SnowFlake.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.SnowFlake.#ctor(System.Int64)">
            <summary>
            构造函数
            </summary>
            <param name="machineId">机器码</param>
        </member>
        <member name="M:Masuit.Tools.Systems.SnowFlake.#ctor(System.Int64,System.Int64)">
            <summary>
            构造函数
            </summary>
            <param name="machineId">机器码</param>
            <param name="datacenterId">数据中心id</param>
        </member>
        <member name="M:Masuit.Tools.Systems.SnowFlake.SetNumberFormater(Masuit.Tools.Strings.NumberFormater)">
            <summary>
            设置数制格式化器
            </summary>
            <param name="nf"></param>
        </member>
        <member name="M:Masuit.Tools.Systems.SnowFlake.GetLongId">
            <summary>
            获取长整形的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.SnowFlake.GetUniqueId">
            <summary>
            获取一个字符串表示形式的id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.SnowFlake.GetUniqueShortId(System.Int32)">
            <summary>
            获取一个字符串表示形式的id
            </summary>
            <param name="maxLength">最大长度，至少6位</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Systems.StopwatchHelper">
            <summary>
            计数器帮助类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.StopwatchHelper.Execute(System.Action)">
            <summary>
            执行方法
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Systems.Lock">
            <summary>
            分布式锁
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.Lock.#ctor(StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue,System.TimeSpan)">
            <summary>
            分布式锁
            </summary>
            <param name="resource"></param>
            <param name="val"></param>
            <param name="validity"></param>
        </member>
        <member name="P:Masuit.Tools.Systems.Lock.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Masuit.Tools.Systems.Lock.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:Masuit.Tools.Systems.Lock.Validity">
            <summary>
            
            </summary>
        </member>
        <member name="T:Masuit.Tools.Systems.RedisLock">
            <summary>
            Redis分布式锁
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.Finalize">
            <summary>
            终结器
            </summary>
        </member>
        <member name="F:Masuit.Tools.Systems.RedisLock.LockScript">
            <summary>
            KEYS[1] ：需要加锁的key，这里需要是字符串类型。
            ARGV[1] ：锁的超时时间，防止死锁
            ARGV[2] ：锁的唯一标识
            </summary>
        </member>
        <member name="F:Masuit.Tools.Systems.RedisLock.UnLockScript">
            <summary>
            – KEYS[1] ：需要加锁的key，这里需要是字符串类型。
            – KEYS[2] ：redis消息的ChannelName,一个分布式锁对应唯一的一个channelName:“redisson_lock__channel__{” + getName() + “}”
            – ARGV[1] ：reids消息体，这里只需要一个字节的标记就可以，主要标记redis的key已经解锁，再结合redis的Subscribe，能唤醒其他订阅解锁消息的客户端线程申请锁。
            – ARGV[2] ：锁的超时时间，防止死锁
            – ARGV[3] ：锁的唯一标识
            </summary>
        </member>
        <member name="F:Masuit.Tools.Systems.RedisLock._leaseTimeSpan">
            <summary>
            默认的30秒过期时间
            </summary>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.#ctor(System.String)">
            <summary>
            默认连接127.0.0.1:6379,synctimeout=20000
            </summary>
            <param name="connstr"></param>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.TryLock(StackExchange.Redis.RedisKey,System.TimeSpan,System.TimeSpan,Masuit.Tools.Systems.Lock@)">
            <summary>
            加锁
            </summary>
            <param name="resource">锁名</param>
            <param name="waitTimeSpan">如果没有锁成功,允许动重试申请锁的最大时长</param>
            <param name="leaseTimeSpan">如果锁成功,对于锁(key)的过期时间</param>
            <param name="lockObject">锁成功信息包装成对象返回</param>
            <returns>true:成功</returns>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.UnLock(Masuit.Tools.Systems.Lock)">
            <summary>
            解锁
            </summary>
            <param name="lockObject">锁成功的返回对象</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.CreateUniqueLockId">
            <summary>
            创建唯一锁id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.SetTimeOut(System.Timers.ElapsedEventHandler,System.Int32)">
            <summary>
            设置超时
            </summary>
            <param name="doWork"></param>
            <param name="time"></param>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.TaskTimeOut(System.Func{Masuit.Tools.Systems.Lock,System.Boolean},Masuit.Tools.Systems.Lock,System.Int32)">
            <summary>
            任务超时
            </summary>
            <param name="action"></param>
            <param name="lockObj"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.Dispose">
            <summary>执行与释放或重置非托管资源关联的应用程序定义的任务。</summary>
        </member>
        <member name="M:Masuit.Tools.Systems.RedisLock.Dispose(System.Boolean)">
            <summary>
            释放锁
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Masuit.Tools.Win32.Windows">
            <summary>
            Windows系统的系列方法
            </summary>
        </member>
        <member name="M:Masuit.Tools.Win32.Windows.EmptyWorkingSet(System.IntPtr)">
            <summary>
            跨平台调用C++的方法
            </summary>
            <param name="hwProc">程序句柄</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Win32.Windows.ClearMemory">
            <summary>
            清理系统内存，返回优化内存后的内存占用率
            </summary>
            <returns>优化内存后的内存占用率</returns>
        </member>
        <member name="M:Masuit.Tools.Win32.Windows.ClearMemorySilent">
            <summary>
            静默清理系统内存
            </summary>
        </member>
        <member name="M:Masuit.Tools.Win32.Windows.RunApp(System.String,System.String,System.Boolean)">
            <summary>
            运行一个控制台程序并返回其输出参数。
            </summary>
            <param name="filename">程序名</param>
            <param name="arguments">输入参数</param>
            <param name="recordLog">是否在控制台输出日志</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Win32.Windows.GetOsVersion">
            <summary>
            获取操作系统版本
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Win32.WindowsServer">
            <summary>
            服务器信息
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.CpuId">
            <summary>
            CPUID
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.CpuCount">
            <summary>
            CPU插槽数
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.CpuMhz">
            <summary>
            CPU主频
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.MacAddress">
            <summary>
            mac地址
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.DiskId">
            <summary>
            硬盘ID
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.DiskSize">
            <summary>
            硬盘大小
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.IpAddress">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.LoginUserName">
            <summary>
            系统当前登录用户
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.ComputerName">
            <summary>
            计算机名
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.SystemType">
            <summary>
            操作系统架构
            </summary>
        </member>
        <member name="F:Masuit.Tools.Win32.WindowsServer.TotalPhysicalMemory">
            <summary>
            物理内存，单位MB
            </summary>
        </member>
        <member name="P:Masuit.Tools.Win32.WindowsServer.Instance">
            <summary>
            获取实例
            </summary>
        </member>
        <member name="M:Masuit.Tools.Win32.WindowsServer.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Masuit.Tools.Win32.WindowsServer.GetSizeOfDisk">
            <summary>
            获取磁盘大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Win32.WindowsServer.GetUserName">
               <summary>
              操作系统的登录用户名
               </summary>
               <returns>  </returns>
        </member>
        <member name="T:Masuit.Tools.Win32.WindowsCommand">
            <summary>
            命令提示符
            </summary>
        </member>
        <member name="M:Masuit.Tools.Win32.WindowsCommand.Execute(System.String,System.Int32)">
            <summary>
            执行一个控制台程序，并获取在控制台返回的数据
            </summary>
            <param name="dosCommand">dos/cmd命令</param>
            <param name="outtime">等待执行时间毫秒值，默认不等待</param>
            <returns>控制台输出信息</returns>
            <exception cref="T:System.SystemException">尚未设置进程 <see cref="P:System.Diagnostics.Process.Id" />，而且不存在可从其确定 <see cref="P:System.Diagnostics.Process.Id" /> 属性的 <see cref="P:System.Diagnostics.Process.Handle" />。- 或 -没有与此 <see cref="T:System.Diagnostics.Process" /> 对象关联的进程。- 或 -您正尝试为远程计算机上运行的进程调用 <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" />。此方法仅对本地计算机上运行的进程可用。</exception>
            <exception cref="T:System.ComponentModel.Win32Exception">未能访问该等待设置。</exception>
            <exception cref="T:System.Exception">命令参数无效，必须传入一个控制台能被cmd.exe可执行程序; 如：ping 127.0.0.1</exception>
        </member>
        <member name="T:Masuit.Tools.Mvc.ActionResults.ResumeFileResult">
            <summary>
            扩展自带的FilePathResult来支持断点续传
            </summary>
        </member>
        <member name="F:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.LogException">
            <summary>
            由于附加依赖性，所以没使用logger.Log4net。
            </summary>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.WriteFile(System.Web.HttpResponseBase)">
            <summary>
            检查请求中的标头，为响应添加适当的标头
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.ContentLength">
            <summary>
            计算要写入Response的总字节长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.SendRange">
            <summary>
            分析If-Range标头并返回：
                true - 如果必须发送部分内容
                false - 如果必须发送整个文件
            spec: http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.27
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.TransmitFile(System.Web.HttpResponseBase)">
            <summary>
            将文件写入响应流，根据请求标头和文件属性添加正确的标头
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.IsRangeNotSatisfiable">
            <summary>
            在以下情况下，范围不可满足：
            起点大于文件的总大小
            起点小于0
            端点等于或大于文件的大小
            起点大于终点
            spec: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.17
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.IsPreconditionFailed">
            <summary>
            在以下情况下，前提可能会失败
            如果匹配（http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24）
                标题为空，与etag不匹配
            如果未经修改则（http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.28）
                header不为空，与File.LastWriteTime不匹配。
                在下载过程中更改文件时可能会发生这种情况。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.IsNotModified">
            <summary>
            如果有的话，该方法返回true
            如果 - 无匹配（http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26）或
            或者如果未经修改则（http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.25）
            已验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.Etag">
            <summary>
            当前文件的Etag响应头
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.Range(System.String)">
            <summary>
            根据Range标头计算起点和终点
            Spec: http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.Util">
            <summary>
            用于支持ResumeFileResult功能的帮助类
            </summary>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.Util.Etag(System.IO.FileInfo)">
            <summary>
            Etag响应头
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.Util.Etag(System.String,System.String)">
            <summary>
            <see cref="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.Util.Etag(System.IO.FileInfo)"/>
            </summary>
            <param name="fullName"></param>
            <param name="lastModified"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.Util.Etag(System.String,System.DateTime)">
            <summary>
            <see cref="M:Masuit.Tools.Mvc.ActionResults.ResumeFileResult.Util.Etag(System.IO.FileInfo)"/>
            </summary>
            <param name="fullName"></param>
            <param name="lastWriteTime"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumeFile(System.Web.Mvc.ControllerBase,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="virtualPath">服务端本地文件的虚拟路径</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumeFile(System.Web.Mvc.ControllerBase,System.String,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="virtualPath">服务端本地文件的虚拟路径</param>
            <param name="fileDownloadName">下载的文件名</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumeFile(System.Web.Mvc.ControllerBase,System.String,System.String,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="virtualPath">服务端本地文件的虚拟路径</param>
            <param name="fileDownloadName">下载的文件名</param>
            <param name="etag">ETag</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumeFile(System.Web.Mvc.ControllerBase,System.IO.FileStream,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="fileStream">文件流</param>
            <param name="fileDownloadName">下载的文件名</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumeFile(System.Web.Mvc.ControllerBase,System.IO.FileStream,System.String,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="fileStream">文件流</param>
            <param name="fileDownloadName">下载的文件名</param>
            <param name="etag">ETag</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumeFile(System.Web.Mvc.ControllerBase,System.Byte[],System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="bytes">文件流</param>
            <param name="fileDownloadName">下载的文件名</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumeFile(System.Web.Mvc.ControllerBase,System.Byte[],System.String,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="bytes">文件流</param>
            <param name="fileDownloadName">下载的文件名</param>
            <param name="etag">ETag</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumePhysicalFile(System.Web.Mvc.ControllerBase,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="physicalPath">服务端本地文件的物理路径</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumePhysicalFile(System.Web.Mvc.ControllerBase,System.String,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="physicalPath">服务端本地文件的物理路径</param>
            <param name="fileDownloadName">下载的文件名</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.ControllerExtension.ResumePhysicalFile(System.Web.Mvc.ControllerBase,System.String,System.String,System.String)">
            <summary>
            可断点续传和多线程下载的FileResult
            </summary>
            <param name="controller"></param>
            <param name="physicalPath">服务端本地文件的物理路径</param>
            <param name="fileDownloadName">下载的文件名</param>
            <param name="etag">ETag</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.Mvc.Mime.ContentType">
            <summary>
            默认MIME映射器，可以根据文件扩展名获取标准内容类型。
            </summary>
        </member>
        <member name="F:Masuit.Tools.Mvc.Mime.ContentType.DefaultMime">
            <summary>
            默认Mime  - 如果没有找到任何其他映射则作为默认的Mime-Type
            </summary>
        </member>
        <member name="T:Masuit.Tools.Mvc.Mime.MimeMapper">
            <summary>
            默认MIME映射器，可以根据文件扩展名获取标准内容类型。
            </summary>
        </member>
        <member name="F:Masuit.Tools.Mvc.Mime.MimeMapper.DefaultMime">
            <summary>
            默认Mime  - 如果没有找到任何其他映射则作为默认的Mime-Type
            </summary>
        </member>
        <member name="F:Masuit.Tools.Mvc.Mime.MimeMapper._pathExtensionPattern">
            <summary>
            在文件路径中搜索文件扩展名的默认正则表达式
            </summary>
        </member>
        <member name="F:Masuit.Tools.Mvc.Mime.MimeMapper._items">
            <summary>
            扩展的Mime类型的默认字典(Content types)
            </summary>
        </member>
        <member name="M:Masuit.Tools.Mvc.Mime.MimeMapper.Extend(Masuit.Tools.Mvc.Mime.MimeMappingItem[])">
            <summary>
            扩展mime映射规则的标准列表。扩展的具有更高的优先级 - 如果扩展具有与标准项相同的扩展名，则会覆盖默认的mime
            </summary>
            <param name="extensions"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.Mime.MimeMapper.GetMimeFromExtension(System.String)">
            <summary>
            返回特定文件扩展名的Content-Type，如果未找到任何对应关系，则返回默认值
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.Mvc.Mime.MimeMapper.GetMimeFromPath(System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.Tools.NoSQL.RedisConnectionManager">
            <summary>
            ConnectionMultiplexer对象管理帮助类
            </summary>
        </member>
        <member name="F:Masuit.Tools.NoSQL.RedisConnectionManager.RedisConnectionString">
            <summary>
            Redis服务器连接字符串，在config配置文件中的ConnectionStrings节下配置，name固定为RedisHosts，值的格式：127.0.0.1:6379,allowadmin=true，如：<br/>
            &lt;connectionStrings&gt;<br/>
                 &lt;add name = "RedisHosts" connectionString="127.0.0.1:6379,allowadmin=true"/&gt;<br/>
            &lt;/connectionStrings&gt;
            </summary>
        </member>
        <member name="P:Masuit.Tools.NoSQL.RedisConnectionManager.Instance">
            <summary>
            对象池获取线程内唯一对象
            </summary>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisConnectionManager.GetConnectionMultiplexer(System.String)">
            <summary>
            缓存获取
            </summary>
            <param name="connectionString">连接字符串</param>
            <returns>连接对象</returns>
        </member>
        <member name="T:Masuit.Tools.NoSQL.RedisHelper">
            <summary>
            Redis操作
            </summary>
        </member>
        <member name="F:Masuit.Tools.NoSQL.RedisHelper.CustomKey">
            <summary>
            自定义键
            </summary>
        </member>
        <member name="E:Masuit.Tools.NoSQL.RedisHelper.ConnectionFailed">
            <summary>
            连接失败 ， 如果重新连接成功你将不会收到这个通知
            </summary>
        </member>
        <member name="E:Masuit.Tools.NoSQL.RedisHelper.ConnectionRestored">
            <summary>
            重新建立连接之前的错误
            </summary>
        </member>
        <member name="E:Masuit.Tools.NoSQL.RedisHelper.ErrorMessage">
            <summary>
            发生错误时
            </summary>
        </member>
        <member name="E:Masuit.Tools.NoSQL.RedisHelper.ConfigurationChanged">
            <summary>
            配置更改时
            </summary>
        </member>
        <member name="E:Masuit.Tools.NoSQL.RedisHelper.HashSlotMoved">
            <summary>
            更改集群时
            </summary>
        </member>
        <member name="E:Masuit.Tools.NoSQL.RedisHelper.InternalError">
            <summary>
            redis类库错误时
            </summary>
        </member>
        <member name="P:Masuit.Tools.NoSQL.RedisHelper.ConnectionCache">
            <summary>
            静态连接池
            </summary>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.#ctor(System.Int32)">
            <summary>
            构造函数，使用该构造函数需要先在config中配置链接字符串，连接字符串在config配置文件中的ConnectionStrings节下配置，name固定为RedisHosts，值的格式：127.0.0.1:6379,allowadmin=true，若未正确配置，将按默认值“127.0.0.1:6379,allowadmin=true,abortConnect=false”进行操作，如：<br/>
            &lt;connectionStrings&gt;<br/>
                 &lt;add name = "RedisHosts" connectionString="127.0.0.1:6379,allowadmin=true,abortConnect=false"/&gt;<br/>
            &lt;/connectionStrings&gt;
            </summary>
            <param name="dbNum">数据库编号</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="readWriteHosts">Redis服务器连接字符串，格式：127.0.0.1:6379,allowadmin=true,abortConnect=false</param>
            <param name="dbNum">数据库的编号</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="readWriteHosts">Redis服务器连接字符串，格式：127.0.0.1:6379,allowadmin=true,abortConnect=false</param>
            <param name="dbNum">数据库的编号</param>
            <param name="_"></param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetInstance(System.Int32)">
            <summary>
            获取新实例
            </summary>
            <param name="db">数据库的编号</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetSingleInstance(System.Int32)">
            <summary>
            获取单例
            </summary>
            <param name="db">数据库的编号</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetInstance(System.String,System.Int32)">
            <summary>
            从对象池获取默认实例
            </summary>
            <param name="conn">Redis服务器连接字符串，格式：127.0.0.1:6379,allowadmin=true,abortConnect=false</param>
            <param name="db">数据库的编号</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetSingleInstance(System.String,System.Int32)">
            <summary>
            获取单例
            </summary>
            <param name="conn">Redis服务器连接字符串，格式：127.0.0.1:6379,allowadmin=true,abortConnect=false</param>
            <param name="db">数据库的编号</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetString(System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            保存单个key value
            </summary>
            <param name="key">Redis Key</param>
            <param name="value">保存的值</param>
            <param name="expiry">过期时间</param>
            <returns>是否保存成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetString(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue}})">
            <summary>
            保存多个key value
            </summary>
            <param name="keyValues">键值对</param>
            <returns>是否保存成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetString``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            保存一个对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键</param>
            <param name="obj">值</param>
            <param name="expiry">过期时间</param>
            <returns>是否保存成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetString(System.String)">
            <summary>
            获取单个key的值
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetString(System.Collections.Generic.List{System.String})">
            <summary>
            获取多个Key
            </summary>
            <param name="listKey">键集合</param>
            <returns>值集合</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetString``1(System.String)">
            <summary>
            获取一个key的对象
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>实例对象</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.StringIncrement(System.String,System.Double)">
            <summary>
            为数字增长val
            </summary>
            <param name="key">键</param>
            <param name="val">可以为负</param>
            <returns>增长后的值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.StringDecrement(System.String,System.Double)">
            <summary>
            为数字减少val
            </summary>
            <param name="key">键</param>
            <param name="val">可以为负</param>
            <returns>减少后的值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetStringAsync(System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            保存单个key value
            </summary>
            <param name="key">Redis Key</param>
            <param name="value">保存的值</param>
            <param name="expiry">过期时间</param>
            <returns>是否保存成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetStringAsync(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue}})">
            <summary>
            保存多个key value
            </summary>
            <param name="keyValues">键值对</param>
            <returns>是否保存成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetStringAsync``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            保存一个对象
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="obj">需要被缓存的对象</param>
            <param name="expiry">过期时间</param>
            <returns>是否保存成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetStringAsync(System.String)">
            <summary>
            获取单个key的值
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetStringAsync(System.Collections.Generic.List{System.String})">
            <summary>
            获取多个Key
            </summary>
            <param name="listKey">键集合</param>
            <returns>值集合</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetStringAsync``1(System.String)">
            <summary>
            获取一个key的对象
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>实例对象</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.IncrementStringAsync(System.String,System.Double)">
            <summary>
            为数字增长val
            </summary>
            <param name="key">键</param>
            <param name="val">可以为负</param>
            <returns>增长后的值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DecrementStringAsync(System.String,System.Double)">
            <summary>
            为数字减少val
            </summary>
            <param name="key">键</param>
            <param name="val">可以为负</param>
            <returns>减少后的值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.HashExists(System.String,System.String)">
            <summary>
            判断某个数据是否已经被缓存
            </summary>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <returns>是否缓存成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetHash``1(System.String,System.String,``0)">
            <summary>
            存储数据到hash表
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <param name="t">对象实例</param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetHash``1(System.String,System.String,``0,System.TimeSpan)">
            <summary>
            存储数据到hash表
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <param name="t">对象实例</param>
            <param name="expire">过期时间</param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DeleteHash(System.String,System.String)">
            <summary>
            移除hash中的某值
            </summary>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <returns>是否移除成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DeleteHash(System.String,System.Collections.Generic.List{StackExchange.Redis.RedisValue})">
            <summary>
            移除hash中的多个值
            </summary>
            <param name="key">键</param>
            <param name="dataKeys">对象的字段集合</param>
            <returns>数量</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetHash``1(System.String,System.String)">
            <summary>
            从hash表获取数据
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <returns>对象实例</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.IncrementHash(System.String,System.String,System.Double)">
            <summary>
            为数字增长val
            </summary>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <param name="val">可以为负</param>
            <returns>增长后的值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DecrementHash(System.String,System.String,System.Double)">
            <summary>
            为数字减少val
            </summary>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <param name="val">可以为负</param>
            <returns>减少后的值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.HashKeys``1(System.String)">
            <summary>
            获取hashkey所有Redis key
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>数据集合</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ExistsHashAsync(System.String,System.String)">
            <summary>
            判断某个数据是否已经被缓存
            </summary>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <returns>是否缓存成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetHashAsync``1(System.String,System.String,``0)">
            <summary>
            存储数据到hash表
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <param name="t">对象实例</param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetHashAsync``1(System.String,System.String,``0,System.TimeSpan)">
            <summary>
            存储数据到hash表
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <param name="t">对象实例</param>
            <param name="expire"></param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DeleteHashAsync(System.String,System.String)">
            <summary>
            移除hash中的某值
            </summary>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <returns>是否移除成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DeleteHashAsync(System.String,System.Collections.Generic.List{StackExchange.Redis.RedisValue})">
            <summary>
            移除hash中的多个值
            </summary>
            <param name="key">键</param>
            <param name="dataKeys">对象的字段集合</param>
            <returns>数量</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetHashAsync``1(System.String,System.String)">
            <summary>
            从hash表获取数据
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <returns>对象实例</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.IncrementHashAsync(System.String,System.String,System.Double)">
            <summary>
            为数字增长val
            </summary>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <param name="val">可以为负</param>
            <returns>增长后的值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DecrementHashAsync(System.String,System.String,System.Double)">
            <summary>
            为数字减少val
            </summary>
            <param name="key">键</param>
            <param name="dataKey">对象的字段</param>
            <param name="val">可以为负</param>
            <returns>减少后的值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.HashKeysAsync``1(System.String)">
            <summary>
            获取hashkey所有Redis key
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>数据集合</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.RemoveList``1(System.String,``0)">
            <summary>
            移除指定ListId的内部List的值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListRange``1(System.String)">
            <summary>
            获取指定key的List
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>数据集</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListRightPush``1(System.String,``0)">
            <summary>
            入队
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListRightPop``1(System.String)">
            <summary>
            出队
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListLeftPush``1(System.String,``0)">
            <summary>
            入栈
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListLeftPop``1(System.String)">
            <summary>
            出栈
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>对象实例</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListLength(System.String)">
            <summary>
            获取集合中的数量
            </summary>
            <param name="key">键</param>
            <returns>数量</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.RemoveListAsync``1(System.String,``0)">
            <summary>
            移除指定ListId的内部List的值
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListRangeAsync``1(System.String)">
            <summary>
            获取指定key的List
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>数据集合</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListRightPushAsync``1(System.String,``0)">
            <summary>
            入队
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListRightPopAsync``1(System.String)">
            <summary>
            出队
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>对象实例</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListLeftPushAsync``1(System.String,``0)">
            <summary>
            入栈
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListLeftPopAsync``1(System.String)">
            <summary>
            出栈
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="key">键</param>
            <returns>实例对象</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ListLengthAsync(System.String)">
            <summary>
            获取集合中的数量
            </summary>
            <param name="key">键</param>
            <returns>数量</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.AddSortedSet``1(System.String,``0,System.Double)">
            <summary>
            添加
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="score">排序号</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.RemoveSortedSet``1(System.String,``0)">
            <summary>
            删除
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetRangeSortedByRank``1(System.String)">
            <summary>
            获取全部
            </summary>
            <param name="key">键</param>
            <returns>数据集合</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetSortedLength(System.String)">
            <summary>
            获取集合中的数量
            </summary>
            <param name="key">键</param>
            <returns>数量</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SortedSetAddAsync``1(System.String,``0,System.Double)">
            <summary>
            添加
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="score">排序号</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SortedSetRemoveAsync``1(System.String,``0)">
            <summary>
            删除
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SortedSetRangeByRankAsync``1(System.String)">
            <summary>
            获取全部
            </summary>
            <param name="key">键</param>
            <returns>数据集合</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SortedSetLengthAsync(System.String)">
            <summary>
            获取集合中的数量
            </summary>
            <param name="key">键</param>
            <returns>数量</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DeleteKey(System.String)">
            <summary>
            删除单个key
            </summary>
            <param name="key">redis key</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DeleteKeyAsync(System.String)">
            <summary>
            删除单个key
            </summary>
            <param name="key">redis key</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.DeleteKey(System.Collections.Generic.List{System.String})">
            <summary>
            删除多个key
            </summary>
            <param name="keys">rediskey</param>
            <returns>成功删除的个数</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.KeyExists(System.String)">
            <summary>
            判断key是否存储
            </summary>
            <param name="key">键</param>
            <returns>是否存储成功</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.RenameKey(System.String,System.String)">
            <summary>
            重新命名key
            </summary>
            <param name="key">旧的键</param>
            <param name="newKey">新的键</param>
            <returns>处理结果</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.Expire(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            设置Key的过期时间
            </summary>
            <param name="key">键</param>
            <param name="expiry">过期时间</param>
            <returns>处理结果</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.ExpireAsync(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            设置Key的过期时间
            </summary>
            <param name="key">键</param>
            <param name="expiry">过期时间</param>
            <returns>处理结果</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.Subscribe(System.String,System.Action{StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue})">
            <summary>
            Redis发布订阅  订阅
            </summary>
            <param name="subChannel">订阅频道</param>
            <param name="handler">处理过程</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.Publish``1(System.String,``0)">
            <summary>
            Redis发布订阅  发布
            </summary>
            <typeparam name="T">消息对象</typeparam>
            <param name="channel">发布频道</param>
            <param name="msg">消息</param>
            <returns>消息的数量</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.Unsubscribe(System.String)">
            <summary>
            Redis发布订阅  取消订阅
            </summary>
            <param name="channel">频道</param>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.UnsubscribeAll">
            <summary>
            Redis发布订阅  取消全部订阅
            </summary>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.CreateTransaction">
            <summary>
            创建一个事务
            </summary>
            <returns>事务对象</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetDatabase">
            <summary>
            获得一个数据库实例
            </summary>
            <returns>数据库实例</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.GetServer(System.String)">
            <summary>
            获得一个服务器实例
            </summary>
            <param name="hostAndPort">服务器地址</param>
            <returns>服务器实例</returns>
        </member>
        <member name="M:Masuit.Tools.NoSQL.RedisHelper.SetSysCustomKey(System.String)">
            <summary>
            设置前缀
            </summary>
            <param name="customKey">前缀</param>
        </member>
    </members>
</doc>
